{"map":"{\"version\":3,\"sources\":[\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/Home.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/pptGen.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/Player.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/Constants.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/App.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/serviceWorker.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/index.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/images/bg-image.png\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/images/retained.png\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/images/sold.png\"],\"names\":[\"Home\",\"pptx\",\"react_default\",\"a\",\"createElement\",\"PptxGenJS\",\"require\",\"PPTGen\",\"xcelData\",\"ExcelDateToJSDate\",\"date\",\"d\",\"Date\",\"Math\",\"round\",\"getMonth\",\"getDate\",\"isNumber\",\"value\",\"isNaN\",\"parseFloat\",\"toFixed\",\"getBasePrice\",\"playerRank\",\"price40K\",\"price30K\",\"price20K\",\"price10K\",\"type\",\"id\",\"onClick\",\"input\",\"document\",\"getElementById\",\"addEventListener\",\"readXlsxFile\",\"files\",\"then\",\"rows\",\"forEach\",\"playerInfo\",\"playerId\",\"playerName\",\"teamName\",\"matches\",\"runs\",\"ballsFaced\",\"strikeRate\",\"wickets\",\"playingRole\",\"economy\",\"bowlOvers\",\"battingAverage\",\"highestScore\",\"bestBowling\",\"hatTricks\",\"catches\",\"totalPoints\",\"batPoints\",\"bowlPoints\",\"fieldingPoints\",\"isExternalPlayer\",\"isRetainedPlayer\",\"isOwnerPlayer\",\"overallRank\",\"batRank\",\"bowlRank\",\"push\",\"playersCount\",\"length\",\"ceil\",\"console\",\"log\",\"i\",\"slide\",\"addNewSlide\",\"matchesX\",\"runsX\",\"wicketsX\",\"addImage\",\"path\",\"bgImage\",\"x\",\"y\",\"w\",\"h\",\"retained\",\"sold\",\"addText\",\"fontSize\",\"color\",\"align\",\"bold\",\"fill\",\"tableHeaderOptions\",\"valign\",\"fontFace\",\"border\",\"pt\",\"tableRowOptions\",\"matchRows\",\"text\",\"options\",\"dynamicMatchRows\",\"matchesTabOpts\",\"rowH\",\"addTable\",\"runsRows\",\"dynamicRunsRows\",\"runsTabOpts\",\"wicketsRows\",\"dynamicWicketsRows\",\"wicketsTabOpts\",\"save\",\"Player\",\"DataComponent\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"sheetLoaded\",\"auctionWebData\",\"currentPlayerId\",\"nextPlayerId\",\"prevPlayerId\",\"_this2\",\"react_google_sheets_default\",\"clientId\",\"apiKey\",\"spreadsheetId\",\"afterLoading\",\"setState\",\"getSheetsData\",\"auctionData\",\"name\",\"mtplPlayers\",\"mtplTeams\",\"getAuctionData\",\"returnData\",\"players\",\"playersData\",\"data\",\"playerProfile\",\"emailId\",\"mobileNo\",\"perTeamPlayerCount\",\"mtbcTeamName\",\"mtplTeamName\",\"basePrice\",\"purchasePrice\",\"status\",\"batSR\",\"batAverage\",\"bestBowl\",\"hatTrick\",\"fieldPoints\",\"populatePlayerInfo\",\"teams\",\"teamInfo\",\"ownerName\",\"amount\",\"amountSpent\",\"amountBalance\",\"playerCount\",\"remainingPlayerCount\",\"maxAllowedBidOnNextPlayer\",\"ownerPlayerId\",\"retainedPlayerId\",\"populateTeams\",\"retrieveAuctionData\",\"map\",\"item\",\"key\",\"className\",\"updateCell\",\"error\",\"Component\",\"ReactGoogleSheets\",\"connect\",\"MainMenu\",\"react_router_dom\",\"to\",\"App\",\"App_MainMenu\",\"react_router\",\"exact\",\"component\",\"exaxt\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nfunction Home() {\\n\\n  return (\\n    <div >\\n      <div>\\n        <div>\\n          <h1 ><center>Welcome to MTPL</center></h1>\\n        </div>\\n        <div>\\n          <center>\\n            <h1>\\n\\n            </h1>\\n          </center>\\n        </div>\\n\\n      </div>\\n    </div>\\n  )\\n};\\n\\nexport default Home;\",\"import React from 'react';\\nimport bgImage from './images/bg-image.png';\\nimport retained from './images/retained.png';\\nimport sold from './images/sold.png';\\n//import preOwned from './images/preOwned.png';\\nimport readXlsxFile from 'read-excel-file'\\n\\nvar PptxGenJS = require(\\\"pptxgenjs\\\");\\nvar pptx;\\n\\nfunction PPTGen() {\\n    var xcelData = [];\\n    const uploadXLSXFile = () => {\\n        const input = document.getElementById('input')\\n\\n        input.addEventListener('change', () => {\\n            readXlsxFile(input.files[0]).then((rows) => {\\n                rows.forEach(function (value) {\\n                    let playerInfo = {};\\n                    if (playerInfo.playerId !== null) {\\n                        playerInfo.playerId = value[0];\\n                        playerInfo.playerName = value[1];\\n                        playerInfo.teamName = value[4];\\n                        playerInfo.matches = value[5];\\n                        playerInfo.runs = value[6];\\n                        playerInfo.ballsFaced = value[7];\\n                        playerInfo.strikeRate = isNumber(value[8]);\\n                        playerInfo.wickets = value[9];\\n                        playerInfo.playingRole = playerInfo.wickets ? 'All Rounder' : 'Batting'\\n                        playerInfo.economy = isNumber(value[10]);\\n                        playerInfo.bowlOvers = value[11];\\n                        playerInfo.battingAverage = isNumber(value[12]);\\n                        playerInfo.highestScore = value[13];\\n                        playerInfo.bestBowling = ExcelDateToJSDate(value[14]);\\n                        playerInfo.hatTricks = value[15];\\n                        playerInfo.catches = value[16];\\n                        playerInfo.totalPoints = value[17];\\n                        playerInfo.batPoints = value[18];\\n                        playerInfo.bowlPoints = value[19];\\n                        playerInfo.fieldingPoints = value[20];\\n                        playerInfo.isExternalPlayer = value[21];\\n                        playerInfo.isRetainedPlayer = value[22];\\n                        playerInfo.isOwnerPlayer = value[23];\\n                        playerInfo.overallRank = value[24];\\n                        playerInfo.batRank = value[25];\\n                        playerInfo.bowlRank = value[26];\\n                        xcelData.push(playerInfo);\\n                    }\\n                })\\n            })\\n        })\\n    }\\n\\n    const ExcelDateToJSDate = (date) => {\\n        if (date === 0)\\n            return \\\"-\\\";\\n        var d = new Date(Math.round((date - 25568) * 86400 * 1000));\\n        return (d.getMonth() + 1) + \\\"/\\\" + d.getDate();\\n    }\\n    const isNumber = (value) => {\\n        if (isNaN(value)) {\\n            return value;\\n        }\\n        return parseFloat(value).toFixed(2);\\n    }\\n\\n    const getBasePrice = (playerRank, price40K, price30K, price20K, price10K) => {\\n        let basePrice = \\\"\\\";\\n        if (playerRank >= price10K) {\\n            basePrice = \\\"$ 10,000 /-\\\";\\n        } else if (playerRank >= price20K) {\\n            basePrice = \\\"$ 20,000 /-\\\";\\n        } else if (playerRank >= price30K) {\\n            basePrice = \\\"$ 30,000 /-\\\";\\n        } else if (playerRank >= price40K) {\\n            basePrice = \\\"$ 40,000 /-\\\";\\n        } else {\\n            basePrice = \\\"$ 50,000 /-\\\";\\n        }\\n        return basePrice;\\n    }\\n    const generatePPT = () => {\\n        var playersCount = xcelData.length;\\n        var price50K = 1;\\n        var price40K = price50K + Math.ceil(((playersCount - 1) * 10) / 100);\\n        var price30K = price40K + Math.ceil(((playersCount - 1) * 15) / 100);\\n        var price20K = price30K + Math.ceil(((playersCount - 1) * 20) / 100);\\n        var price10K = price20K + Math.ceil(((playersCount - 1) * 25) / 100);\\n        console.log('50K : ' + price50K + ' ;40K : ' + price40K + ' ;30K : ' + price30K\\n            + ' ;20K : ' + price20K + ' ;10K : ' + price10K);\\n        pptx = new PptxGenJS();\\n        for (let i = 0; i < playersCount; i++) {\\n\\n            let playerInfo = xcelData[i];\\n            if (playerInfo.playerId !== 'player_id') {\\n                var slide = pptx.addNewSlide();\\n                var centerAlignOpts = { x: 1.0, y: 0.2, fontSize: 40, color: '000000', h: 1.4, align: 'center', bold: true };\\n                var playerRankOpts = { x: 4.0, y: 1.8, fontSize: 16, color: 'FFFF00', bold: true };\\n                var playerBasePriceOpts = { x: 6.7, y: 0.3, fontSize: 20, color: '000000', bold: true, w: 3.3, fill: 'FFFF00' };\\n                var playerIdOpts = { x: 4.0, y: 2.1, fontSize: 16, color: 'FFFF00', bold: true };\\n                var teamNameOpts = { x: 4.0, y: 2.4, fontSize: 16, color: 'FFFF00', bold: true };\\n                var playingRoleOpts = { x: 4.0, y: 2.7, fontSize: 16, color: 'FFFF00', bold: true };\\n\\n                let matchesX = 1.7;\\n                let runsX = 3.4;\\n                let wicketsX = 5.1;\\n\\n                if (playerInfo.wickets) {\\n                    matchesX = 0.1;\\n                    runsX = 0.7;\\n                    wicketsX = 5.5;\\n                } else {\\n                    matchesX = 2.4;\\n                    runsX = 3.7;\\n                }\\n\\n                slide.addImage({ path: bgImage, x: 0, y: 0, w: 10, h: 5.60 })\\n\\n                if (playerInfo.isRetainedPlayer) {\\n                    slide.addImage({ path: retained, x: 1, y: 2.0, w: 2.2, h: 1 })\\n                }\\n\\n                if (playerInfo.isOwnerPlayer) {\\n                    slide.addImage({ path: sold, x: 1.2, y: 2.0, w: 2, h: 1 })\\n                }\\n\\n                if (playerInfo.isExternalPlayer) {\\n                    // External Player\\n                    slide.addText('Associated with Other MN Cricket League(s)', { x: 0, y: 0, fontSize: 10, color: 'C0C0C0', h: 0.3, w: 10, align: 'center', bold: true, fill: 'B22222' });\\n                    slide.addText('Associated with Other MN Cricket League(s)', { x: 0, y: 5.33, fontSize: 10, color: 'C0C0C0', h: 0.3, w: 10, align: 'center', bold: true, fill: 'B22222' });\\n                }\\n\\n                // Player Name\\n                slide.addText(playerInfo.playerName, centerAlignOpts);\\n\\n                // Overall Rank\\n                slide.addText('Base Price: ' + getBasePrice(playerInfo.overallRank, price40K, price30K, price20K, price10K), playerBasePriceOpts);\\n\\n                // Overall Rank\\n                slide.addText('Overall Rank: ' + playerInfo.overallRank, playerRankOpts);\\n\\n                // Player ID\\n                slide.addText('Player ID: ' + playerInfo.playerId, playerIdOpts);\\n                // Team Name\\n\\n                slide.addText('Team Name: ' + playerInfo.teamName, teamNameOpts);\\n                // Playing Role\\n\\n                slide.addText('Playing Role: ' + playerInfo.playingRole, playingRoleOpts);\\n\\n                // Batting Stats\\n                slide.addText('Batting Stats', { x: runsX, y: 3.5, w: 4.6, fontSize: 16, fill: 'FF8C00', color: '000000', bold: true });\\n\\n                // Batting Style\\n                //slide.addText('Batting Role: ' + playerInfo.battingRole, battingRoleOpts);\\n                // Bowling Style\\n                //slide.addText('Bowling Role: ' + playerInfo.bowlingRole, bowlingRoleOpts);\\n\\n                let tableHeaderOptions = { valign: 't', align: 'c', fontFace: 'Arial', border: { pt: 0 } };\\n                let tableRowOptions = { valign: 't', align: 'c', fontFace: 'Arial', border: { pt: 0 } };\\n\\n                // Matches\\n                var matchRows = [\\n                    [\\n                        { text: '(M)', options: tableHeaderOptions }\\n                    ]\\n                ];\\n                let dynamicMatchRows = [{ text: playerInfo.matches, options: tableRowOptions }];\\n                matchRows.push(dynamicMatchRows);\\n\\n                var matchesTabOpts = { x: matchesX, y: 3.8, w: 0.5, rowH: 0.6, fill: '5A81E0', fontSize: 16, color: 'FFFFFF', valign: 'm', bold: true };\\n                slide.addTable(matchRows, matchesTabOpts);\\n\\n                // Runs\\n                var runsRows = [\\n                    [\\n                        { text: 'Rank', options: tableHeaderOptions },\\n                        { text: 'Runs', options: tableHeaderOptions },\\n                        { text: 'S/R', options: tableHeaderOptions },\\n                        { text: 'HS', options: tableHeaderOptions },\\n                        { text: 'Ave', options: tableHeaderOptions },\\n                        { text: '(C)', options: tableHeaderOptions }\\n                    ]\\n                ];\\n                var dynamicRunsRows = [\\n                    { text: playerInfo.batRank, options: tableRowOptions },\\n                    { text: playerInfo.runs, options: tableRowOptions },\\n                    { text: playerInfo.strikeRate, options: tableRowOptions },\\n                    { text: playerInfo.highestScore, options: tableRowOptions },\\n                    { text: playerInfo.battingAverage, options: tableRowOptions },\\n                    { text: playerInfo.catches, options: tableRowOptions }\\n                ];\\n\\n                runsRows.push(dynamicRunsRows);\\n                //runsRows.push([{ text: 'S/R : ' + playerInfo.strikeRate, options: tableRowOptions }]);\\n                var runsTabOpts = { x: runsX, y: 3.8, w: 4.6, rowH: 0.6, fill: '5A81E0', fontSize: 16, color: 'FFFFFF', valign: 'm', bold: true };\\n                slide.addTable(runsRows, runsTabOpts);\\n\\n                if (playerInfo.playingRole !== 'Batting') {\\n                    // Batting Stats\\n                    slide.addText('Bowling Stats', { x: wicketsX, y: 3.5, w: 4.3, fontSize: 16, fill: 'FF8C00', color: '000000', bold: true });\\n                    // Wickets\\n                    var wicketsRows = [\\n                        [\\n                            { text: 'Rank', options: tableHeaderOptions },\\n                            { text: '(W)', options: tableHeaderOptions },\\n                            { text: '(O)', options: tableHeaderOptions },\\n                            { text: 'Econ', options: tableHeaderOptions },\\n                            { text: 'BB', options: tableHeaderOptions },\\n                            { text: 'H/T', options: tableHeaderOptions },\\n                        ]\\n                    ];\\n                    let dynamicWicketsRows = [\\n                        { text: playerInfo.bowlRank, options: tableRowOptions },\\n                        { text: playerInfo.wickets, options: tableRowOptions },\\n                        { text: playerInfo.bowlOvers, options: tableRowOptions },\\n                        { text: playerInfo.economy, options: tableRowOptions },\\n                        { text: playerInfo.bestBowling, options: tableRowOptions },\\n                        { text: playerInfo.hatTricks, options: tableRowOptions },\\n                    ];\\n                    wicketsRows.push(dynamicWicketsRows);\\n                    var wicketsTabOpts = { x: wicketsX, y: 3.8, w: 4.3, rowH: 0.6, fill: '5A81E0', fontSize: 16, color: 'FFFFFF', valign: 'm', bold: true };\\n\\n                    slide.addTable(wicketsRows, wicketsTabOpts);\\n                }\\n            }\\n        }\\n        pptx.save();\\n\\n        console.log('Complete');\\n    }\\n\\n    return (\\n        <div >\\n            <div>\\n                <div>\\n                    <h1 ><center>MTPL Players Slide Generator</center></h1>\\n                </div>\\n                <div>\\n                    <center>\\n                        <h1>\\n                            <input type=\\\"file\\\" id=\\\"input\\\" onClick={uploadXLSXFile} />\\n                        </h1>\\n                    </center>\\n                </div>\\n\\n                <div>\\n\\n                    <center>\\n                        <h1>\\n                            <button onClick={generatePPT}>Generate MTPL Slides</button>\\n                        </h1>\\n                    </center>\\n                </div>\\n            </div>\\n        </div>\\n    )\\n};\\n\\nexport default PPTGen;\",\"import React from 'react';\\nimport bgImage from './images/bg-image.png';\\nimport retained from './images/retained.png';\\nimport sold from './images/sold.png';\\n\\n\\nfunction Player(props) {\\n    return (\\n        <div key={props.id}>\\n            {props.item.name}\\n        </div>\\n    );\\n}\\n\\nexport default Player;\",\"import ReactGoogleSheets from 'react-google-sheets';\\nimport * as Constants from './Constants'\\nimport React, { Component } from 'react';\\nimport './App.css';\\nimport Player from './Player.js'\\n\\nclass DataComponent extends Component {\\n\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      sheetLoaded: false,\\n      auctionWebData: {},\\n      currentPlayerId: '',\\n      nextPlayerId: '',\\n      prevPlayerId: ''\\n\\n    }\\n  }\\n  render() {\\n\\n    const populatePlayerInfo = (players) => {\\n      let returnData = [];\\n      let playersData = players.data;\\n      for (let i = 0; i < playersData.length; i++) {\\n        let playerProfile = {};\\n        playerProfile.playerId = playersData[i][0];\\n        playerProfile.name = playersData[i][1];\\n        playerProfile.emailId = playersData[i][2];\\n        playerProfile.mobileNo = playersData[i][3];\\n        playerProfile.perTeamPlayerCount = playersData[i][4];\\n        playerProfile.mtbcTeamName = playersData[i][5];\\n        playerProfile.mtplTeamName = playersData[i][6];\\n        playerProfile.basePrice = playersData[i][7];\\n        playerProfile.purchasePrice = playersData[i][8];\\n        playerProfile.status = playersData[i][9];\\n        playerProfile.isExternalPlayer = playersData[i][10];\\n        playerProfile.isRetainedPlayer = playersData[i][11];\\n        playerProfile.isOwnerPlayer = playersData[i][12];\\n        playerProfile.overallRank = playersData[i][13];\\n        playerProfile.id = playersData[i][13];\\n        playerProfile.batRank = playersData[i][14];\\n        playerProfile.bowlRank = playersData[i][15];\\n        playerProfile.matches = playersData[i][16];\\n        playerProfile.runs = playersData[i][17];\\n        playerProfile.ballsFaced = playersData[i][18];\\n        playerProfile.batSR = playersData[i][19];\\n        playerProfile.wickets = playersData[i][20];\\n        playerProfile.economy = playersData[i][21];\\n        playerProfile.bowlOvers = playersData[i][22];\\n        playerProfile.batAverage = playersData[i][23];\\n        playerProfile.highestScore = playersData[i][24];\\n        playerProfile.bestBowl = playersData[i][25];\\n        playerProfile.hatTrick = playersData[i][26];\\n        playerProfile.catches = playersData[i][27];\\n        playerProfile.totalPoints = playersData[i][28];\\n        playerProfile.batPoints = playersData[i][29];\\n        playerProfile.bowlPoints = playersData[i][30];\\n        playerProfile.fieldPoints = playersData[i][31];\\n\\n        returnData.push(playerProfile);\\n      }\\n      return returnData;\\n    }\\n\\n    const populateTeams = (mtplTeams) => {\\n      let returnData = [];\\n      let teams = mtplTeams.data;\\n      for (let i = 3; i < teams.length; i++) {\\n        let teamInfo = {};\\n        teamInfo.name = teams[i][0];\\n        teamInfo.ownerName = teams[i][1];\\n        teamInfo.isOwnerPlayer = teams[i][2];\\n        teamInfo.amount = teams[i][3];\\n        teamInfo.amountSpent = teams[i][4];\\n        teamInfo.amountBalance = teams[i][5];\\n        teamInfo.playerCount = teams[i][6];\\n        teamInfo.remainingPlayerCount = teams[i][7];\\n        teamInfo.maxAllowedBidOnNextPlayer = teams[i][8];\\n        teamInfo.ownerPlayerId = teams[i][9];\\n        teamInfo.retainedPlayerId = teams[i][10];\\n        returnData.push(teamInfo);\\n      }\\n      return returnData;\\n    }\\n\\n    const getAuctionData = (xcelData) => {\\n      let auctionData = {};\\n      for (let i = 0; i < xcelData.length; i++) {\\n        switch (xcelData[i].name) {\\n          case 'MTPL Players':\\n            auctionData.mtplPlayers = xcelData[i];\\n            break;\\n          case 'MTPL Teams':\\n            auctionData.mtplTeams = xcelData[i];\\n            break;\\n          default:\\n            break;\\n        }\\n      }\\n      return auctionData;\\n    }\\n\\n    const retrieveAuctionData = () => {\\n      let xcelData = this.props.getSheetsData();\\n      console.log(\\\"No of Sheets : \\\", xcelData.length);\\n      let auctionWebData = getAuctionData(xcelData);\\n      console.log('MTPL Players : ', auctionWebData.mtplPlayers);\\n      console.log('MTPL Teams : ', auctionWebData.mtplTeams);\\n\\n      let returnData = {};\\n      returnData.players = populatePlayerInfo(auctionWebData.mtplPlayers);\\n      returnData.teams = populateTeams(auctionWebData.mtplTeams);\\n      console.log(\\\"MTPL Players : \\\", returnData.players);\\n      console.log(\\\"MTPL Teams : \\\", returnData.teams);\\n      return returnData;\\n    }\\n\\n    return (\\n      <div>\\n        <ReactGoogleSheets\\n          clientId={Constants.CLIENT_ID}\\n          apiKey={Constants.API_KEY}\\n          spreadsheetId={Constants.MTPL_MENS_SPREADSHEET_ID}\\n          afterLoading={() => this.setState({ sheetLoaded: true })}\\n        >\\n          {this.state.sheetLoaded ? retrieveAuctionData().players.map((item, key) =>\\n\\n\\n            /*  <Player item={item} id={key} key={key} /> */\\n            <div key={key} className=\\\"AuctionBody\\\">\\n\\n\\n\\n              <div>\\n                <button onClick={() => { }}>Previous</button>\\n\\n                <button onClick={() => { }}>Next</button>\\n              </div>\\n\\n              {item.isExternalPlayer === 'TRUE' ? <div className=\\\"externalPlayer\\\"> Associated with Other MN Cricket League(s) </div> : ''}\\n\\n              <div className=\\\"basePrice\\\">\\n                <span>Base Price : {item.basePrice}</span>\\n              </div>\\n              <div className=\\\"playerName\\\">\\n                <span>{item.name}</span>\\n              </div>\\n              <div className=\\\"playerInfo\\\">\\n                <span>Rank: {item.overallRank}</span>\\n                <span>MTBC Team: {item.mtbcTeamName}</span>\\n\\n              </div>\\n              <div className=\\\"holdMTPLSpace\\\" />\\n              <div className=\\\"mtplPlayerInfo\\\"> \\n                {item.mtplTeamName ? <span>MTPL Team: {item.mtplTeamName} </span> : ''}\\n              </div>\\n              <div className=\\\"holdEmptySpace\\\" />\\n              <div className=\\\"table\\\">\\n                <table>\\n                  <tr>\\n                    <td className=\\\"td\\\">\\n                      Matches\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      &nbsp;\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      Rank\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      Runs\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      S/R\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      HS\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      Ave\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      (C)\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      &nbsp;\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      Rank\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      (W)\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      (O)\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      Econ\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      BB\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      H/T\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td className=\\\"td\\\">\\n                      {item.matches}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      &nbsp;\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.batRank}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.runs}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.batSR}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.highestScore}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.batAverage}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.catches}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      &nbsp;\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.bowlRank}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.wickets}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.bowlOvers}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.economy}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.bestBowl}\\n                    </td>\\n                    <td className=\\\"td\\\">\\n                      {item.hatTrick}\\n                    </td>\\n                  </tr>\\n\\n                </table>\\n              </div>\\n\\n\\n              {/* Update Data */}\\n              <button onClick={() => {\\n                this.props.updateCell(\\n                  'MTPL Players', // sheetName\\n                  'G', // column\\n                  4, // row\\n                  'Sholay - 11', // value\\n                  null, // successCallback\\n                  (error) => {\\n                    console.log('error', error)\\n                  } // errorCallback\\n                );\\n                this.props.updateCell(\\n                  'MTPL Players', // sheetName\\n                  'I', // column\\n                  4, // row\\n                  '50000', // value\\n                  null, // successCallback\\n                  (error) => {\\n                    console.log('error', error)\\n                  } // errorCallback\\n                );\\n              }}>update cell!</button>\\n            </div>\\n\\n          ) : 'loading...'}\\n        </ReactGoogleSheets>\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default ReactGoogleSheets.connect(DataComponent);\\n\",\"// Costants for the Project\\nexport const CLIENT_ID = \\\"267639530824-5egrbu2hfl6e7g067pbhot3q78mov1pf.apps.googleusercontent.com\\\";                        \\nexport const API_KEY = \\\"2R9N3HATOemkNgV112UVWXwR\\\";\\nexport const MTPL_MENS_SPREADSHEET_ID = \\\"1ls3vgQ8F0rZSgj6pk3bzdr1bFRMdJs0JTsRqHRj7tlU\\\";\\n\",\"import React from 'react';\\nimport './App.css';\\nimport Home from './Home.js';\\nimport PPTGen from './pptGen.js';\\nimport DataComponent from './DataComponent.js';\\n//import mtbcLogo from './images/MTBC_logo.png';\\n//import mtplLogo from './images/MTPL_logo.png';\\n//<img src={mtbcLogo} className=\\\"MTBC-logo\\\" alt=\\\"MTBC\\\" />\\n//<img src={mtplLogo} className=\\\"MTPL-logo\\\" alt=\\\"MTPL\\\" />\\n\\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\\n\\nconst MainMenu = () => {\\n  return (\\n    <div>\\n      <Link to=\\\"/\\\">\\n        <button>home</button>\\n      </Link>\\n      <Link to=\\\"/ppt\\\">\\n        <button>PPT Generator</button>\\n      </Link>\\n      <Link to=\\\"/auction\\\">\\n        <button>Auction</button>\\n      </Link>\\n    </div>\\n  );\\n};\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <header className=\\\"App-header\\\">\\n        <span>Welcome to MTPL 2019 </span>\\n        <span>< MainMenu /> </span>\\n      </header>\\n      <div>\\n        <Route exact path=\\\"/\\\" component={Home} />\\n        <Route exaxt path=\\\"/ppt\\\" component={PPTGen} />\\n        <Route exact path=\\\"/auction\\\" component={DataComponent} />\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/bg-image.a6acb911.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/retained.84e70c63.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/sold.6e4297b7.png\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{128:function(e,t){},140:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),o=a(69),r=a.n(o);a(84),a(39);var c,s=function(){return l.a.createElement(\"div\",null,l.a.createElement(\"div\",null,l.a.createElement(\"div\",null,l.a.createElement(\"h1\",null,l.a.createElement(\"center\",null,\"Welcome to MTPL\"))),l.a.createElement(\"div\",null,l.a.createElement(\"center\",null,l.a.createElement(\"h1\",null)))))},i=a(32),m=a.n(i),d=a(33),u=a.n(d),p=a(34),E=a.n(p),h=a(142),v=a(85);var b=function(){var e=[],t=function(e){if(0===e)return\"-\";var t=new Date(Math.round(86400*(e-25568)*1e3));return t.getMonth()+1+\"/\"+t.getDate()},a=function(e){return isNaN(e)?e:parseFloat(e).toFixed(2)},n=function(e,t,a,n,l){return e>=l?\"$ 10,000 /-\":e>=n?\"$ 20,000 /-\":e>=a?\"$ 30,000 /-\":e>=t?\"$ 40,000 /-\":\"$ 50,000 /-\"};return l.a.createElement(\"div\",null,l.a.createElement(\"div\",null,l.a.createElement(\"div\",null,l.a.createElement(\"h1\",null,l.a.createElement(\"center\",null,\"MTPL Players Slide Generator\"))),l.a.createElement(\"div\",null,l.a.createElement(\"center\",null,l.a.createElement(\"h1\",null,l.a.createElement(\"input\",{type:\"file\",id:\"input\",onClick:function(){var n=document.getElementById(\"input\");n.addEventListener(\"change\",function(){Object(h.a)(n.files[0]).then(function(n){n.forEach(function(n){var l={};null!==l.playerId&&(l.playerId=n[0],l.playerName=n[1],l.teamName=n[4],l.matches=n[5],l.runs=n[6],l.ballsFaced=n[7],l.strikeRate=a(n[8]),l.wickets=n[9],l.playingRole=l.wickets?\"All Rounder\":\"Batting\",l.economy=a(n[10]),l.bowlOvers=n[11],l.battingAverage=a(n[12]),l.highestScore=n[13],l.bestBowling=t(n[14]),l.hatTricks=n[15],l.catches=n[16],l.totalPoints=n[17],l.batPoints=n[18],l.bowlPoints=n[19],l.fieldingPoints=n[20],l.isExternalPlayer=n[21],l.isRetainedPlayer=n[22],l.isOwnerPlayer=n[23],l.overallRank=n[24],l.batRank=n[25],l.bowlRank=n[26],e.push(l))})})})}})))),l.a.createElement(\"div\",null,l.a.createElement(\"center\",null,l.a.createElement(\"h1\",null,l.a.createElement(\"button\",{onClick:function(){var t=e.length,a=1+Math.ceil(10*(t-1)/100),l=a+Math.ceil(15*(t-1)/100),o=l+Math.ceil(20*(t-1)/100),r=o+Math.ceil(25*(t-1)/100);console.log(\"50K : 1 ;40K : \"+a+\" ;30K : \"+l+\" ;20K : \"+o+\" ;10K : \"+r),c=new v;for(var s=0;s<t;s++){var i=e[s];if(\"player_id\"!==i.playerId){var d=c.addNewSlide(),p=1.7,h=3.4,b=5.1;i.wickets?(p=.1,h=.7,b=5.5):(p=2.4,h=3.7),d.addImage({path:m.a,x:0,y:0,w:10,h:5.6}),i.isRetainedPlayer&&d.addImage({path:u.a,x:1,y:2,w:2.2,h:1}),i.isOwnerPlayer&&d.addImage({path:E.a,x:1.2,y:2,w:2,h:1}),i.isExternalPlayer&&(d.addText(\"Associated with Other MN Cricket League(s)\",{x:0,y:0,fontSize:10,color:\"C0C0C0\",h:.3,w:10,align:\"center\",bold:!0,fill:\"B22222\"}),d.addText(\"Associated with Other MN Cricket League(s)\",{x:0,y:5.33,fontSize:10,color:\"C0C0C0\",h:.3,w:10,align:\"center\",bold:!0,fill:\"B22222\"})),d.addText(i.playerName,{x:1,y:.2,fontSize:40,color:\"000000\",h:1.4,align:\"center\",bold:!0}),d.addText(\"Base Price: \"+n(i.overallRank,a,l,o,r),{x:6.7,y:.3,fontSize:20,color:\"000000\",bold:!0,w:3.3,fill:\"FFFF00\"}),d.addText(\"Overall Rank: \"+i.overallRank,{x:4,y:1.8,fontSize:16,color:\"FFFF00\",bold:!0}),d.addText(\"Player ID: \"+i.playerId,{x:4,y:2.1,fontSize:16,color:\"FFFF00\",bold:!0}),d.addText(\"Team Name: \"+i.teamName,{x:4,y:2.4,fontSize:16,color:\"FFFF00\",bold:!0}),d.addText(\"Playing Role: \"+i.playingRole,{x:4,y:2.7,fontSize:16,color:\"FFFF00\",bold:!0}),d.addText(\"Batting Stats\",{x:h,y:3.5,w:4.6,fontSize:16,fill:\"FF8C00\",color:\"000000\",bold:!0});var f={valign:\"t\",align:\"c\",fontFace:\"Arial\",border:{pt:0}},y={valign:\"t\",align:\"c\",fontFace:\"Arial\",border:{pt:0}},g=[[{text:\"(M)\",options:f}]],x=[{text:i.matches,options:y}];g.push(x);var N={x:p,y:3.8,w:.5,rowH:.6,fill:\"5A81E0\",fontSize:16,color:\"FFFFFF\",valign:\"m\",bold:!0};d.addTable(g,N);var P=[[{text:\"Rank\",options:f},{text:\"Runs\",options:f},{text:\"S/R\",options:f},{text:\"HS\",options:f},{text:\"Ave\",options:f},{text:\"(C)\",options:f}]],w=[{text:i.batRank,options:y},{text:i.runs,options:y},{text:i.strikeRate,options:y},{text:i.highestScore,options:y},{text:i.battingAverage,options:y},{text:i.catches,options:y}];P.push(w);var T={x:h,y:3.8,w:4.6,rowH:.6,fill:\"5A81E0\",fontSize:16,color:\"FFFFFF\",valign:\"m\",bold:!0};if(d.addTable(P,T),\"Batting\"!==i.playingRole){d.addText(\"Bowling Stats\",{x:b,y:3.5,w:4.3,fontSize:16,fill:\"FF8C00\",color:\"000000\",bold:!0});var F=[[{text:\"Rank\",options:f},{text:\"(W)\",options:f},{text:\"(O)\",options:f},{text:\"Econ\",options:f},{text:\"BB\",options:f},{text:\"H/T\",options:f}]],k=[{text:i.bowlRank,options:y},{text:i.wickets,options:y},{text:i.bowlOvers,options:y},{text:i.economy,options:y},{text:i.bestBowling,options:y},{text:i.hatTricks,options:y}];F.push(k);var R={x:b,y:3.8,w:4.3,rowH:.6,fill:\"5A81E0\",fontSize:16,color:\"FFFFFF\",valign:\"m\",bold:!0};d.addTable(F,R)}}}c.save(),console.log(\"Complete\")}},\"Generate MTPL Slides\"))))))},f=a(72),y=a(73),g=a(77),x=a(74),N=a(78),P=a(35),w=a.n(P);var T=function(e){function t(e){var a;return Object(f.a)(this,t),(a=Object(g.a)(this,Object(x.a)(t).call(this,e))).state={sheetLoaded:!1,auctionWebData:{},currentPlayerId:\"\",nextPlayerId:\"\",prevPlayerId:\"\"},a}return Object(N.a)(t,e),Object(y.a)(t,[{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",null,l.a.createElement(w.a,{clientId:\"267639530824-5egrbu2hfl6e7g067pbhot3q78mov1pf.apps.googleusercontent.com\",apiKey:\"2R9N3HATOemkNgV112UVWXwR\",spreadsheetId:\"1ls3vgQ8F0rZSgj6pk3bzdr1bFRMdJs0JTsRqHRj7tlU\",afterLoading:function(){return e.setState({sheetLoaded:!0})}},this.state.sheetLoaded?function(){var t=e.props.getSheetsData();console.log(\"No of Sheets : \",t.length);var a=function(e){for(var t={},a=0;a<e.length;a++)switch(e[a].name){case\"MTPL Players\":t.mtplPlayers=e[a];break;case\"MTPL Teams\":t.mtplTeams=e[a]}return t}(t);console.log(\"MTPL Players : \",a.mtplPlayers),console.log(\"MTPL Teams : \",a.mtplTeams);var n={};return n.players=function(e){for(var t=[],a=e.data,n=0;n<a.length;n++){var l={};l.playerId=a[n][0],l.name=a[n][1],l.emailId=a[n][2],l.mobileNo=a[n][3],l.perTeamPlayerCount=a[n][4],l.mtbcTeamName=a[n][5],l.mtplTeamName=a[n][6],l.basePrice=a[n][7],l.purchasePrice=a[n][8],l.status=a[n][9],l.isExternalPlayer=a[n][10],l.isRetainedPlayer=a[n][11],l.isOwnerPlayer=a[n][12],l.overallRank=a[n][13],l.id=a[n][13],l.batRank=a[n][14],l.bowlRank=a[n][15],l.matches=a[n][16],l.runs=a[n][17],l.ballsFaced=a[n][18],l.batSR=a[n][19],l.wickets=a[n][20],l.economy=a[n][21],l.bowlOvers=a[n][22],l.batAverage=a[n][23],l.highestScore=a[n][24],l.bestBowl=a[n][25],l.hatTrick=a[n][26],l.catches=a[n][27],l.totalPoints=a[n][28],l.batPoints=a[n][29],l.bowlPoints=a[n][30],l.fieldPoints=a[n][31],t.push(l)}return t}(a.mtplPlayers),n.teams=function(e){for(var t=[],a=e.data,n=3;n<a.length;n++){var l={};l.name=a[n][0],l.ownerName=a[n][1],l.isOwnerPlayer=a[n][2],l.amount=a[n][3],l.amountSpent=a[n][4],l.amountBalance=a[n][5],l.playerCount=a[n][6],l.remainingPlayerCount=a[n][7],l.maxAllowedBidOnNextPlayer=a[n][8],l.ownerPlayerId=a[n][9],l.retainedPlayerId=a[n][10],t.push(l)}return t}(a.mtplTeams),console.log(\"MTPL Players : \",n.players),console.log(\"MTPL Teams : \",n.teams),n}().players.map(function(t,a){return l.a.createElement(\"div\",{key:a,className:\"AuctionBody\"},l.a.createElement(\"div\",null,l.a.createElement(\"button\",{onClick:function(){}},\"Previous\"),l.a.createElement(\"button\",{onClick:function(){}},\"Next\")),\"TRUE\"===t.isExternalPlayer?l.a.createElement(\"div\",{className:\"externalPlayer\"},\" Associated with Other MN Cricket League(s) \"):\"\",l.a.createElement(\"div\",{className:\"basePrice\"},l.a.createElement(\"span\",null,\"Base Price : \",t.basePrice)),l.a.createElement(\"div\",{className:\"playerName\"},l.a.createElement(\"span\",null,t.name)),l.a.createElement(\"div\",{className:\"playerInfo\"},l.a.createElement(\"span\",null,\"Rank: \",t.overallRank),l.a.createElement(\"span\",null,\"MTBC Team: \",t.mtbcTeamName)),l.a.createElement(\"div\",{className:\"holdMTPLSpace\"}),l.a.createElement(\"div\",{className:\"mtplPlayerInfo\"},t.mtplTeamName?l.a.createElement(\"span\",null,\"MTPL Team: \",t.mtplTeamName,\" \"):\"\"),l.a.createElement(\"div\",{className:\"holdEmptySpace\"}),l.a.createElement(\"div\",{className:\"table\"},l.a.createElement(\"table\",null,l.a.createElement(\"tr\",null,l.a.createElement(\"td\",{className:\"td\"},\"Matches\"),l.a.createElement(\"td\",{className:\"td\"},\"\\xa0\"),l.a.createElement(\"td\",{className:\"td\"},\"Rank\"),l.a.createElement(\"td\",{className:\"td\"},\"Runs\"),l.a.createElement(\"td\",{className:\"td\"},\"S/R\"),l.a.createElement(\"td\",{className:\"td\"},\"HS\"),l.a.createElement(\"td\",{className:\"td\"},\"Ave\"),l.a.createElement(\"td\",{className:\"td\"},\"(C)\"),l.a.createElement(\"td\",{className:\"td\"},\"\\xa0\"),l.a.createElement(\"td\",{className:\"td\"},\"Rank\"),l.a.createElement(\"td\",{className:\"td\"},\"(W)\"),l.a.createElement(\"td\",{className:\"td\"},\"(O)\"),l.a.createElement(\"td\",{className:\"td\"},\"Econ\"),l.a.createElement(\"td\",{className:\"td\"},\"BB\"),l.a.createElement(\"td\",{className:\"td\"},\"H/T\")),l.a.createElement(\"tr\",null,l.a.createElement(\"td\",{className:\"td\"},t.matches),l.a.createElement(\"td\",{className:\"td\"},\"\\xa0\"),l.a.createElement(\"td\",{className:\"td\"},t.batRank),l.a.createElement(\"td\",{className:\"td\"},t.runs),l.a.createElement(\"td\",{className:\"td\"},t.batSR),l.a.createElement(\"td\",{className:\"td\"},t.highestScore),l.a.createElement(\"td\",{className:\"td\"},t.batAverage),l.a.createElement(\"td\",{className:\"td\"},t.catches),l.a.createElement(\"td\",{className:\"td\"},\"\\xa0\"),l.a.createElement(\"td\",{className:\"td\"},t.bowlRank),l.a.createElement(\"td\",{className:\"td\"},t.wickets),l.a.createElement(\"td\",{className:\"td\"},t.bowlOvers),l.a.createElement(\"td\",{className:\"td\"},t.economy),l.a.createElement(\"td\",{className:\"td\"},t.bestBowl),l.a.createElement(\"td\",{className:\"td\"},t.hatTrick)))),l.a.createElement(\"button\",{onClick:function(){e.props.updateCell(\"MTPL Players\",\"G\",4,\"Sholay - 11\",null,function(e){console.log(\"error\",e)}),e.props.updateCell(\"MTPL Players\",\"I\",4,\"50000\",null,function(e){console.log(\"error\",e)})}},\"update cell!\"))}):\"loading...\"))}}]),t}(n.Component),F=w.a.connect(T),k=a(19),R=a(10),S=function(){return l.a.createElement(\"div\",null,l.a.createElement(k.b,{to:\"/\"},l.a.createElement(\"button\",null,\"home\")),l.a.createElement(k.b,{to:\"/ppt\"},l.a.createElement(\"button\",null,\"PPT Generator\")),l.a.createElement(k.b,{to:\"/auction\"},l.a.createElement(\"button\",null,\"Auction\")))};var M=function(){return l.a.createElement(k.a,null,l.a.createElement(\"header\",{className:\"App-header\"},l.a.createElement(\"span\",null,\"Welcome to MTPL 2019 \"),l.a.createElement(\"span\",null,l.a.createElement(S,null),\" \")),l.a.createElement(\"div\",null,l.a.createElement(R.a,{exact:!0,path:\"/\",component:s}),l.a.createElement(R.a,{exaxt:!0,path:\"/ppt\",component:b}),l.a.createElement(R.a,{exact:!0,path:\"/auction\",component:F})))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(l.a.createElement(M,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},32:function(e,t,a){e.exports=a.p+\"static/media/bg-image.a6acb911.png\"},33:function(e,t,a){e.exports=a.p+\"static/media/retained.84e70c63.png\"},34:function(e,t,a){e.exports=a.p+\"static/media/sold.6e4297b7.png\"},39:function(e,t,a){},41:function(e,t){},79:function(e,t,a){e.exports=a(140)},84:function(e,t,a){},90:function(e,t){},91:function(e,t){},94:function(e,t){},96:function(e,t){}},[[79,1,2]]]);","extractedComments":[]}