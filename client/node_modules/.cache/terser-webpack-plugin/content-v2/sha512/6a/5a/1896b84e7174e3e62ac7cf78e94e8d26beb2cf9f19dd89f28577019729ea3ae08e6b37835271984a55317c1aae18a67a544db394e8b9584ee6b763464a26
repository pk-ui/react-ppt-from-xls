{"map":"{\"version\":3,\"sources\":[\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/Home.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/pptGen.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/Constants.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/App.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/serviceWorker.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/index.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/images/bg-image.png\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/images/retained.png\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/images/sold.png\"],\"names\":[\"Home\",\"pptx\",\"react_default\",\"a\",\"createElement\",\"PptxGenJS\",\"require\",\"PPTGen\",\"xcelData\",\"ExcelDateToJSDate\",\"date\",\"d\",\"Date\",\"Math\",\"round\",\"getMonth\",\"getDate\",\"isNumber\",\"value\",\"isNaN\",\"parseFloat\",\"toFixed\",\"getBasePrice\",\"playerRank\",\"price40K\",\"price30K\",\"price20K\",\"price10K\",\"type\",\"id\",\"onClick\",\"input\",\"document\",\"getElementById\",\"addEventListener\",\"readXlsxFile\",\"files\",\"then\",\"rows\",\"forEach\",\"playerInfo\",\"playerId\",\"playerName\",\"teamName\",\"matches\",\"runs\",\"ballsFaced\",\"strikeRate\",\"wickets\",\"playingRole\",\"economy\",\"bowlOvers\",\"battingAverage\",\"highestScore\",\"bestBowling\",\"hatTricks\",\"catches\",\"totalPoints\",\"batPoints\",\"bowlPoints\",\"fieldingPoints\",\"isExternalPlayer\",\"isRetainedPlayer\",\"isOwnerPlayer\",\"overallRank\",\"batRank\",\"bowlRank\",\"push\",\"playersCount\",\"length\",\"ceil\",\"console\",\"log\",\"i\",\"slide\",\"addNewSlide\",\"matchesX\",\"runsX\",\"wicketsX\",\"addImage\",\"path\",\"bgImage\",\"x\",\"y\",\"w\",\"h\",\"retained\",\"sold\",\"addText\",\"fontSize\",\"color\",\"align\",\"bold\",\"fill\",\"tableHeaderOptions\",\"valign\",\"fontFace\",\"border\",\"pt\",\"tableRowOptions\",\"matchRows\",\"text\",\"options\",\"dynamicMatchRows\",\"matchesTabOpts\",\"rowH\",\"addTable\",\"runsRows\",\"dynamicRunsRows\",\"runsTabOpts\",\"wicketsRows\",\"dynamicWicketsRows\",\"wicketsTabOpts\",\"save\",\"DataComponent\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"sheetLoaded\",\"_this2\",\"react_google_sheets_default\",\"clientId\",\"apiKey\",\"spreadsheetId\",\"afterLoading\",\"setState\",\"className\",\"getSheetsData\",\"updateCell\",\"error\",\"Component\",\"ReactGoogleSheets\",\"connect\",\"MainMenu\",\"react_router_dom\",\"to\",\"App\",\"App_MainMenu\",\"react_router\",\"exact\",\"component\",\"exaxt\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nfunction Home() {\\n\\n  return (\\n    <div >\\n      <div>\\n        <div>\\n          <h1 ><center>Welcome to MTPL</center></h1>\\n        </div>\\n        <div>\\n          <center>\\n            <h1>\\n\\n            </h1>\\n          </center>\\n        </div>\\n\\n      </div>\\n    </div>\\n  )\\n};\\n\\nexport default Home;\",\"import React from 'react';\\nimport bgImage from './images/bg-image.png';\\nimport retained from './images/retained.png';\\nimport sold from './images/sold.png';\\n//import preOwned from './images/preOwned.png';\\nimport readXlsxFile from 'read-excel-file'\\n\\nvar PptxGenJS = require(\\\"pptxgenjs\\\");\\nvar pptx;\\n\\nfunction PPTGen() {\\n    var xcelData = [];\\n    const uploadXLSXFile = () => {\\n        const input = document.getElementById('input')\\n\\n        input.addEventListener('change', () => {\\n            readXlsxFile(input.files[0]).then((rows) => {\\n                rows.forEach(function (value) {\\n                    let playerInfo = {};\\n                    if (playerInfo.playerId !== null) {\\n                        playerInfo.playerId = value[0];\\n                        playerInfo.playerName = value[1];\\n                        playerInfo.teamName = value[4];\\n                        playerInfo.matches = value[5];\\n                        playerInfo.runs = value[6];\\n                        playerInfo.ballsFaced = value[7];\\n                        playerInfo.strikeRate = isNumber(value[8]);\\n                        playerInfo.wickets = value[9];\\n                        playerInfo.playingRole = playerInfo.wickets ? 'All Rounder' : 'Batting'\\n                        playerInfo.economy = isNumber(value[10]);\\n                        playerInfo.bowlOvers = value[11];\\n                        playerInfo.battingAverage = isNumber(value[12]);\\n                        playerInfo.highestScore = value[13];\\n                        playerInfo.bestBowling = ExcelDateToJSDate(value[14]);\\n                        playerInfo.hatTricks = value[15];\\n                        playerInfo.catches = value[16];\\n                        playerInfo.totalPoints = value[17];\\n                        playerInfo.batPoints = value[18];\\n                        playerInfo.bowlPoints = value[19];\\n                        playerInfo.fieldingPoints = value[20];\\n                        playerInfo.isExternalPlayer = value[21];\\n                        playerInfo.isRetainedPlayer = value[22];\\n                        playerInfo.isOwnerPlayer = value[23];\\n                        playerInfo.overallRank = value[24];\\n                        playerInfo.batRank = value[25];\\n                        playerInfo.bowlRank = value[26];\\n                        xcelData.push(playerInfo);\\n                    }\\n                })\\n            })\\n        })\\n    }\\n\\n    const ExcelDateToJSDate = (date) => {\\n        if (date === 0)\\n            return \\\"-\\\";\\n        var d = new Date(Math.round((date - 25568) * 86400 * 1000));\\n        return (d.getMonth() + 1) + \\\"/\\\" + d.getDate();\\n    }\\n    const isNumber = (value) => {\\n        if (isNaN(value)) {\\n            return value;\\n        }\\n        return parseFloat(value).toFixed(2);\\n    }\\n\\n    const getBasePrice = (playerRank, price40K, price30K, price20K, price10K) => {\\n        let basePrice = \\\"\\\";\\n        if (playerRank >= price10K) {\\n            basePrice = \\\"$ 10,000 /-\\\";\\n        } else if (playerRank >= price20K) {\\n            basePrice = \\\"$ 20,000 /-\\\";\\n        } else if (playerRank >= price30K) {\\n            basePrice = \\\"$ 30,000 /-\\\";\\n        } else if (playerRank >= price40K) {\\n            basePrice = \\\"$ 40,000 /-\\\";\\n        } else {\\n            basePrice = \\\"$ 50,000 /-\\\";\\n        }\\n        return basePrice;\\n    }\\n    const generatePPT = () => {\\n        var playersCount = xcelData.length;\\n        var price50K = 1;\\n        var price40K = price50K + Math.ceil(((playersCount - 1) * 10) / 100);\\n        var price30K = price40K + Math.ceil(((playersCount - 1) * 15) / 100);\\n        var price20K = price30K + Math.ceil(((playersCount - 1) * 20) / 100);\\n        var price10K = price20K + Math.ceil(((playersCount - 1) * 25) / 100);\\n        console.log('50K : ' + price50K + ' ;40K : ' + price40K + ' ;30K : ' + price30K\\n            + ' ;20K : ' + price20K + ' ;10K : ' + price10K);\\n        pptx = new PptxGenJS();\\n        for (let i = 0; i < playersCount; i++) {\\n\\n            let playerInfo = xcelData[i];\\n            if (playerInfo.playerId !== 'player_id') {\\n                var slide = pptx.addNewSlide();\\n                var centerAlignOpts = { x: 1.0, y: 0.2, fontSize: 40, color: '000000', h: 1.4, align: 'center', bold: true };\\n                var playerRankOpts = { x: 4.0, y: 1.8, fontSize: 16, color: 'FFFF00', bold: true };\\n                var playerBasePriceOpts = { x: 6.7, y: 0.3, fontSize: 20, color: '000000', bold: true, w: 3.3, fill: 'FFFF00' };\\n                var playerIdOpts = { x: 4.0, y: 2.1, fontSize: 16, color: 'FFFF00', bold: true };\\n                var teamNameOpts = { x: 4.0, y: 2.4, fontSize: 16, color: 'FFFF00', bold: true };\\n                var playingRoleOpts = { x: 4.0, y: 2.7, fontSize: 16, color: 'FFFF00', bold: true };\\n\\n                let matchesX = 1.7;\\n                let runsX = 3.4;\\n                let wicketsX = 5.1;\\n\\n                if (playerInfo.wickets) {\\n                    matchesX = 0.1;\\n                    runsX = 0.7;\\n                    wicketsX = 5.5;\\n                } else {\\n                    matchesX = 2.4;\\n                    runsX = 3.7;\\n                }\\n\\n                slide.addImage({ path: bgImage, x: 0, y: 0, w: 10, h: 5.60 })\\n\\n                if (playerInfo.isRetainedPlayer) {\\n                    slide.addImage({ path: retained, x: 1, y: 2.0, w: 2.2, h: 1 })\\n                }\\n\\n                if (playerInfo.isOwnerPlayer) {\\n                    slide.addImage({ path: sold, x: 1.2, y: 2.0, w: 2, h: 1 })\\n                }\\n\\n                if (playerInfo.isExternalPlayer) {\\n                    // External Player\\n                    slide.addText('Associated with Other MN Cricket League(s)', { x: 0, y: 0, fontSize: 10, color: 'C0C0C0', h: 0.3, w: 10, align: 'center', bold: true, fill: 'B22222' });\\n                    slide.addText('Associated with Other MN Cricket League(s)', { x: 0, y: 5.33, fontSize: 10, color: 'C0C0C0', h: 0.3, w: 10, align: 'center', bold: true, fill: 'B22222' });\\n                }\\n\\n                // Player Name\\n                slide.addText(playerInfo.playerName, centerAlignOpts);\\n\\n                // Overall Rank\\n                slide.addText('Base Price: ' + getBasePrice(playerInfo.overallRank, price40K, price30K, price20K, price10K), playerBasePriceOpts);\\n\\n                // Overall Rank\\n                slide.addText('Overall Rank: ' + playerInfo.overallRank, playerRankOpts);\\n\\n                // Player ID\\n                slide.addText('Player ID: ' + playerInfo.playerId, playerIdOpts);\\n                // Team Name\\n\\n                slide.addText('Team Name: ' + playerInfo.teamName, teamNameOpts);\\n                // Playing Role\\n\\n                slide.addText('Playing Role: ' + playerInfo.playingRole, playingRoleOpts);\\n\\n                // Batting Stats\\n                slide.addText('Batting Stats', { x: runsX, y: 3.5, w: 4.6, fontSize: 16, fill: 'FF8C00', color: '000000', bold: true });\\n\\n                // Batting Style\\n                //slide.addText('Batting Role: ' + playerInfo.battingRole, battingRoleOpts);\\n                // Bowling Style\\n                //slide.addText('Bowling Role: ' + playerInfo.bowlingRole, bowlingRoleOpts);\\n\\n                let tableHeaderOptions = { valign: 't', align: 'c', fontFace: 'Arial', border: { pt: 0 } };\\n                let tableRowOptions = { valign: 't', align: 'c', fontFace: 'Arial', border: { pt: 0 } };\\n\\n                // Matches\\n                var matchRows = [\\n                    [\\n                        { text: '(M)', options: tableHeaderOptions }\\n                    ]\\n                ];\\n                let dynamicMatchRows = [{ text: playerInfo.matches, options: tableRowOptions }];\\n                matchRows.push(dynamicMatchRows);\\n\\n                var matchesTabOpts = { x: matchesX, y: 3.8, w: 0.5, rowH: 0.6, fill: '5A81E0', fontSize: 16, color: 'FFFFFF', valign: 'm', bold: true };\\n                slide.addTable(matchRows, matchesTabOpts);\\n\\n                // Runs\\n                var runsRows = [\\n                    [\\n                        { text: 'Rank', options: tableHeaderOptions },\\n                        { text: 'Runs', options: tableHeaderOptions },\\n                        { text: 'S/R', options: tableHeaderOptions },\\n                        { text: 'HS', options: tableHeaderOptions },\\n                        { text: 'Ave', options: tableHeaderOptions },\\n                        { text: '(C)', options: tableHeaderOptions }\\n                    ]\\n                ];\\n                var dynamicRunsRows = [\\n                    { text: playerInfo.batRank, options: tableRowOptions },\\n                    { text: playerInfo.runs, options: tableRowOptions },\\n                    { text: playerInfo.strikeRate, options: tableRowOptions },\\n                    { text: playerInfo.highestScore, options: tableRowOptions },\\n                    { text: playerInfo.battingAverage, options: tableRowOptions },\\n                    { text: playerInfo.catches, options: tableRowOptions }\\n                ];\\n\\n                runsRows.push(dynamicRunsRows);\\n                //runsRows.push([{ text: 'S/R : ' + playerInfo.strikeRate, options: tableRowOptions }]);\\n                var runsTabOpts = { x: runsX, y: 3.8, w: 4.6, rowH: 0.6, fill: '5A81E0', fontSize: 16, color: 'FFFFFF', valign: 'm', bold: true };\\n                slide.addTable(runsRows, runsTabOpts);\\n\\n                if (playerInfo.playingRole !== 'Batting') {\\n                    // Batting Stats\\n                    slide.addText('Bowling Stats', { x: wicketsX, y: 3.5, w: 4.3, fontSize: 16, fill: 'FF8C00', color: '000000', bold: true });\\n                    // Wickets\\n                    var wicketsRows = [\\n                        [\\n                            { text: 'Rank', options: tableHeaderOptions },\\n                            { text: '(W)', options: tableHeaderOptions },\\n                            { text: '(O)', options: tableHeaderOptions },\\n                            { text: 'Econ', options: tableHeaderOptions },\\n                            { text: 'BB', options: tableHeaderOptions },\\n                            { text: 'H/T', options: tableHeaderOptions },\\n                        ]\\n                    ];\\n                    let dynamicWicketsRows = [\\n                        { text: playerInfo.bowlRank, options: tableRowOptions },\\n                        { text: playerInfo.wickets, options: tableRowOptions },\\n                        { text: playerInfo.bowlOvers, options: tableRowOptions },\\n                        { text: playerInfo.economy, options: tableRowOptions },\\n                        { text: playerInfo.bestBowling, options: tableRowOptions },\\n                        { text: playerInfo.hatTricks, options: tableRowOptions },\\n                    ];\\n                    wicketsRows.push(dynamicWicketsRows);\\n                    var wicketsTabOpts = { x: wicketsX, y: 3.8, w: 4.3, rowH: 0.6, fill: '5A81E0', fontSize: 16, color: 'FFFFFF', valign: 'm', bold: true };\\n\\n                    slide.addTable(wicketsRows, wicketsTabOpts);\\n                }\\n            }\\n        }\\n        pptx.save();\\n\\n        console.log('Complete');\\n    }\\n\\n    return (\\n        <div >\\n            <div>\\n                <div>\\n                    <h1 ><center>MTPL Players Slide Generator</center></h1>\\n                </div>\\n                <div>\\n                    <center>\\n                        <h1>\\n                            <input type=\\\"file\\\" id=\\\"input\\\" onClick={uploadXLSXFile} />\\n                        </h1>\\n                    </center>\\n                </div>\\n\\n                <div>\\n\\n                    <center>\\n                        <h1>\\n                            <button onClick={generatePPT}>Generate MTPL Slides</button>\\n                        </h1>\\n                    </center>\\n                </div>\\n            </div>\\n        </div>\\n    )\\n};\\n\\nexport default PPTGen;\",\"import ReactGoogleSheets from 'react-google-sheets';\\nimport * as Constants from './Constants'\\nimport React, { Component } from 'react';\\nimport './App.css';\\n\\nclass DataComponent extends Component {\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      sheetLoaded: false,\\n    }\\n  }\\n  render() {\\n    return (\\n      <ReactGoogleSheets \\n        clientId={Constants.CLIENT_ID}\\n        apiKey={Constants.API_KEY}\\n        spreadsheetId={Constants.SPREADSHEET_ID}\\n        afterLoading={() => this.setState({sheetLoaded: true})}\\n      >\\n        {this.state.sheetLoaded ? \\n          <div className=\\\"AuctionBody\\\">\\n            {/* Access Data */}\\n            {console.log('Your sheet data : ', this.props.getSheetsData(\\\"MTPL Players\\\"))}\\n            \\n            {/* Previous Player Info*/}\\n            <button onClick={() => {\\n             \\n            }}>Previous</button>\\n\\n            {/* Next Player Info*/}\\n            <button onClick={() => {\\n          \\n            }}>Next</button>\\n\\n            {/* Update Data */}\\n            <button onClick={() => {\\n              this.props.updateCell(\\n                'MTPL Players', // sheetName\\n                'G', // column\\n                4, // row\\n                'Sholay - 11', // value\\n                null, // successCallback\\n                (error) => {\\n                  console.log('error', error)\\n                } // errorCallback\\n              );\\n              this.props.updateCell(\\n                'MTPL Players', // sheetName\\n                'I', // column\\n                4, // row\\n                '50000', // value\\n                null, // successCallback\\n                (error) => {\\n                  console.log('error', error)\\n                } // errorCallback\\n              );\\n            }}>update cell!</button>\\n          </div>\\n          :\\n          'loading...'\\n        }\\n      </ReactGoogleSheets>\\n    )\\n  }\\n}\\n \\nexport default ReactGoogleSheets.connect(DataComponent);\\n \",\"// Costants for the Project\\nexport const CLIENT_ID = \\\"267639530824-5egrbu2hfl6e7g067pbhot3q78mov1pf.apps.googleusercontent.com\\\";\\n                        \\nexport const API_KEY = \\\"2R9N3HATOemkNgV112UVWXwR\\\";\\nexport const SPREADSHEET_ID = \\\"1gZiyFtkSBrLW9tboV2hVYbj4iAI773WQ_Uj2ybmc044\\\";\\nexport const MTPL_PLAYER_SHEET = \\\"MTPL Players\\\";\",\"import React from 'react';\\nimport './App.css';\\nimport Home from './Home.js';\\nimport PPTGen from './pptGen.js';\\nimport DataComponent from './DataComponent.js';\\n//import mtbcLogo from './images/MTBC_logo.png';\\n//import mtplLogo from './images/MTPL_logo.png';\\n//<img src={mtbcLogo} className=\\\"MTBC-logo\\\" alt=\\\"MTBC\\\" />\\n//<img src={mtplLogo} className=\\\"MTPL-logo\\\" alt=\\\"MTPL\\\" />\\n\\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\\n\\nconst MainMenu = () => {\\n  return (\\n    <div>\\n      <Link to=\\\"/\\\">\\n        <button>home</button>\\n      </Link>\\n      <Link to=\\\"/ppt\\\">\\n        <button>PPT Generator</button>\\n      </Link>\\n      <Link to=\\\"/auction\\\">\\n        <button>Auction</button>\\n      </Link>\\n    </div>\\n  );\\n};\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <header className=\\\"App-header\\\">\\n        <span>Welcome to MTPL 2019 </span>\\n        <span>< MainMenu /> </span>\\n      </header>\\n      <div>\\n        <Route exact path=\\\"/\\\" component={Home} />\\n        <Route exaxt path=\\\"/ppt\\\" component={PPTGen} />\\n        <Route exact path=\\\"/auction\\\" component={DataComponent} />\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/bg-image.a990a9b1.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/retained.84e70c63.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/sold.6e4297b7.png\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{128:function(e,t){},140:function(e,t,n){\"use strict\";n.r(t);var o=n(0),a=n.n(o),l=n(66),r=n.n(l);n(84),n(36);var s,c=function(){return a.a.createElement(\"div\",null,a.a.createElement(\"div\",null,a.a.createElement(\"div\",null,a.a.createElement(\"h1\",null,a.a.createElement(\"center\",null,\"Welcome to MTPL\"))),a.a.createElement(\"div\",null,a.a.createElement(\"center\",null,a.a.createElement(\"h1\",null)))))},i=n(67),d=n.n(i),u=n(68),m=n.n(u),p=n(69),f=n.n(p),v=n(142),h=n(85);var x=function(){var e=[],t=function(e){if(0===e)return\"-\";var t=new Date(Math.round(86400*(e-25568)*1e3));return t.getMonth()+1+\"/\"+t.getDate()},n=function(e){return isNaN(e)?e:parseFloat(e).toFixed(2)},o=function(e,t,n,o,a){return e>=a?\"$ 10,000 /-\":e>=o?\"$ 20,000 /-\":e>=n?\"$ 30,000 /-\":e>=t?\"$ 40,000 /-\":\"$ 50,000 /-\"};return a.a.createElement(\"div\",null,a.a.createElement(\"div\",null,a.a.createElement(\"div\",null,a.a.createElement(\"h1\",null,a.a.createElement(\"center\",null,\"MTPL Players Slide Generator\"))),a.a.createElement(\"div\",null,a.a.createElement(\"center\",null,a.a.createElement(\"h1\",null,a.a.createElement(\"input\",{type:\"file\",id:\"input\",onClick:function(){var o=document.getElementById(\"input\");o.addEventListener(\"change\",function(){Object(v.a)(o.files[0]).then(function(o){o.forEach(function(o){var a={};null!==a.playerId&&(a.playerId=o[0],a.playerName=o[1],a.teamName=o[4],a.matches=o[5],a.runs=o[6],a.ballsFaced=o[7],a.strikeRate=n(o[8]),a.wickets=o[9],a.playingRole=a.wickets?\"All Rounder\":\"Batting\",a.economy=n(o[10]),a.bowlOvers=o[11],a.battingAverage=n(o[12]),a.highestScore=o[13],a.bestBowling=t(o[14]),a.hatTricks=o[15],a.catches=o[16],a.totalPoints=o[17],a.batPoints=o[18],a.bowlPoints=o[19],a.fieldingPoints=o[20],a.isExternalPlayer=o[21],a.isRetainedPlayer=o[22],a.isOwnerPlayer=o[23],a.overallRank=o[24],a.batRank=o[25],a.bowlRank=o[26],e.push(a))})})})}})))),a.a.createElement(\"div\",null,a.a.createElement(\"center\",null,a.a.createElement(\"h1\",null,a.a.createElement(\"button\",{onClick:function(){var t=e.length,n=1+Math.ceil(10*(t-1)/100),a=n+Math.ceil(15*(t-1)/100),l=a+Math.ceil(20*(t-1)/100),r=l+Math.ceil(25*(t-1)/100);console.log(\"50K : 1 ;40K : \"+n+\" ;30K : \"+a+\" ;20K : \"+l+\" ;10K : \"+r),s=new h;for(var c=0;c<t;c++){var i=e[c];if(\"player_id\"!==i.playerId){var u=s.addNewSlide(),p=1.7,v=3.4,x=5.1;i.wickets?(p=.1,v=.7,x=5.5):(p=2.4,v=3.7),u.addImage({path:d.a,x:0,y:0,w:10,h:5.6}),i.isRetainedPlayer&&u.addImage({path:m.a,x:1,y:2,w:2.2,h:1}),i.isOwnerPlayer&&u.addImage({path:f.a,x:1.2,y:2,w:2,h:1}),i.isExternalPlayer&&(u.addText(\"Associated with Other MN Cricket League(s)\",{x:0,y:0,fontSize:10,color:\"C0C0C0\",h:.3,w:10,align:\"center\",bold:!0,fill:\"B22222\"}),u.addText(\"Associated with Other MN Cricket League(s)\",{x:0,y:5.33,fontSize:10,color:\"C0C0C0\",h:.3,w:10,align:\"center\",bold:!0,fill:\"B22222\"})),u.addText(i.playerName,{x:1,y:.2,fontSize:40,color:\"000000\",h:1.4,align:\"center\",bold:!0}),u.addText(\"Base Price: \"+o(i.overallRank,n,a,l,r),{x:6.7,y:.3,fontSize:20,color:\"000000\",bold:!0,w:3.3,fill:\"FFFF00\"}),u.addText(\"Overall Rank: \"+i.overallRank,{x:4,y:1.8,fontSize:16,color:\"FFFF00\",bold:!0}),u.addText(\"Player ID: \"+i.playerId,{x:4,y:2.1,fontSize:16,color:\"FFFF00\",bold:!0}),u.addText(\"Team Name: \"+i.teamName,{x:4,y:2.4,fontSize:16,color:\"FFFF00\",bold:!0}),u.addText(\"Playing Role: \"+i.playingRole,{x:4,y:2.7,fontSize:16,color:\"FFFF00\",bold:!0}),u.addText(\"Batting Stats\",{x:v,y:3.5,w:4.6,fontSize:16,fill:\"FF8C00\",color:\"000000\",bold:!0});var b={valign:\"t\",align:\"c\",fontFace:\"Arial\",border:{pt:0}},y={valign:\"t\",align:\"c\",fontFace:\"Arial\",border:{pt:0}},g=[[{text:\"(M)\",options:b}]],P=[{text:i.matches,options:y}];g.push(P);var F={x:p,y:3.8,w:.5,rowH:.6,fill:\"5A81E0\",fontSize:16,color:\"FFFFFF\",valign:\"m\",bold:!0};u.addTable(g,F);var E=[[{text:\"Rank\",options:b},{text:\"Runs\",options:b},{text:\"S/R\",options:b},{text:\"HS\",options:b},{text:\"Ave\",options:b},{text:\"(C)\",options:b}]],w=[{text:i.batRank,options:y},{text:i.runs,options:y},{text:i.strikeRate,options:y},{text:i.highestScore,options:y},{text:i.battingAverage,options:y},{text:i.catches,options:y}];E.push(w);var k={x:v,y:3.8,w:4.6,rowH:.6,fill:\"5A81E0\",fontSize:16,color:\"FFFFFF\",valign:\"m\",bold:!0};if(u.addTable(E,k),\"Batting\"!==i.playingRole){u.addText(\"Bowling Stats\",{x:x,y:3.5,w:4.3,fontSize:16,fill:\"FF8C00\",color:\"000000\",bold:!0});var R=[[{text:\"Rank\",options:b},{text:\"(W)\",options:b},{text:\"(O)\",options:b},{text:\"Econ\",options:b},{text:\"BB\",options:b},{text:\"H/T\",options:b}]],C=[{text:i.bowlRank,options:y},{text:i.wickets,options:y},{text:i.bowlOvers,options:y},{text:i.economy,options:y},{text:i.bestBowling,options:y},{text:i.hatTricks,options:y}];R.push(C);var S={x:x,y:3.8,w:4.3,rowH:.6,fill:\"5A81E0\",fontSize:16,color:\"FFFFFF\",valign:\"m\",bold:!0};u.addTable(R,S)}}}s.save(),console.log(\"Complete\")}},\"Generate MTPL Slides\"))))))},b=n(72),y=n(73),g=n(77),P=n(74),F=n(78),E=n(32),w=n.n(E),k=function(e){function t(e){var n;return Object(b.a)(this,t),(n=Object(g.a)(this,Object(P.a)(t).call(this,e))).state={sheetLoaded:!1},n}return Object(F.a)(t,e),Object(y.a)(t,[{key:\"render\",value:function(){var e=this;return a.a.createElement(w.a,{clientId:\"267639530824-5egrbu2hfl6e7g067pbhot3q78mov1pf.apps.googleusercontent.com\",apiKey:\"2R9N3HATOemkNgV112UVWXwR\",spreadsheetId:\"1gZiyFtkSBrLW9tboV2hVYbj4iAI773WQ_Uj2ybmc044\",afterLoading:function(){return e.setState({sheetLoaded:!0})}},this.state.sheetLoaded?a.a.createElement(\"div\",{className:\"AuctionBody\"},console.log(\"Your sheet data : \",this.props.getSheetsData(\"MTPL Players\")),a.a.createElement(\"button\",{onClick:function(){}},\"Previous\"),a.a.createElement(\"button\",{onClick:function(){}},\"Next\"),a.a.createElement(\"button\",{onClick:function(){e.props.updateCell(\"MTPL Players\",\"G\",4,\"Sholay - 11\",null,function(e){console.log(\"error\",e)}),e.props.updateCell(\"MTPL Players\",\"I\",4,\"50000\",null,function(e){console.log(\"error\",e)})}},\"update cell!\")):\"loading...\")}}]),t}(o.Component),R=w.a.connect(k),C=n(19),S=n(10),T=function(){return a.a.createElement(\"div\",null,a.a.createElement(C.b,{to:\"/\"},a.a.createElement(\"button\",null,\"home\")),a.a.createElement(C.b,{to:\"/ppt\"},a.a.createElement(\"button\",null,\"PPT Generator\")),a.a.createElement(C.b,{to:\"/auction\"},a.a.createElement(\"button\",null,\"Auction\")))};var j=function(){return a.a.createElement(C.a,null,a.a.createElement(\"header\",{className:\"App-header\"},a.a.createElement(\"span\",null,\"Welcome to MTPL 2019 \"),a.a.createElement(\"span\",null,a.a.createElement(T,null),\" \")),a.a.createElement(\"div\",null,a.a.createElement(S.a,{exact:!0,path:\"/\",component:c}),a.a.createElement(S.a,{exaxt:!0,path:\"/ppt\",component:x}),a.a.createElement(S.a,{exact:!0,path:\"/auction\",component:R})))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(a.a.createElement(j,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},36:function(e,t){throw new Error(\"Module build failed (from ./node_modules/mini-css-extract-plugin/dist/loader.js):\\nModuleNotFoundError: Module not found: Error: Can't resolve './images/cricket_stadium.png' in '/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src'\\n    at factory.create (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/webpack/lib/Compilation.js:823:10)\\n    at factory (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/webpack/lib/NormalModuleFactory.js:397:22)\\n    at resolver (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/webpack/lib/NormalModuleFactory.js:130:21)\\n    at asyncLib.parallel (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/webpack/lib/NormalModuleFactory.js:224:22)\\n    at /Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/neo-async/async.js:2830:7\\n    at /Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/neo-async/async.js:6877:13\\n    at normalResolver.resolve (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/webpack/lib/NormalModuleFactory.js:214:25)\\n    at doResolve (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/enhanced-resolve/lib/Resolver.js:184:12)\\n    at hook.callAsync (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/enhanced-resolve/lib/Resolver.js:238:5)\\n    at _fn0 (eval at create (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:15:1)\\n    at resolver.doResolve (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js:37:5)\\n    at hook.callAsync (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/enhanced-resolve/lib/Resolver.js:238:5)\\n    at _fn0 (eval at create (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:15:1)\\n    at hook.callAsync (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/enhanced-resolve/lib/Resolver.js:238:5)\\n    at _fn0 (eval at create (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:27:1)\\n    at resolver.doResolve (/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js:42:38)\")},38:function(e,t){},67:function(e,t,n){e.exports=n.p+\"static/media/bg-image.a990a9b1.png\"},68:function(e,t,n){e.exports=n.p+\"static/media/retained.84e70c63.png\"},69:function(e,t,n){e.exports=n.p+\"static/media/sold.6e4297b7.png\"},79:function(e,t,n){e.exports=n(140)},84:function(e,t,n){},90:function(e,t){},91:function(e,t){},94:function(e,t){},96:function(e,t){}},[[79,1,2]]]);","extractedComments":[]}