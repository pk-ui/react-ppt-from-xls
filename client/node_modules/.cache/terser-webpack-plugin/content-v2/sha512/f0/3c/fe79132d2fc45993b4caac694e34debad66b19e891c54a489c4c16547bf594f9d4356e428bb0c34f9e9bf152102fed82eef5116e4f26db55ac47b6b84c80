{"map":"{\"version\":3,\"sources\":[\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/Home.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/pptGen.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/Constants.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/App.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/serviceWorker.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/index.js\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/images/bg-image.png\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/images/retained.png\",\"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/images/sold.png\"],\"names\":[\"Home\",\"pptx\",\"react_default\",\"a\",\"createElement\",\"PptxGenJS\",\"require\",\"PPTGen\",\"xcelData\",\"ExcelDateToJSDate\",\"date\",\"d\",\"Date\",\"Math\",\"round\",\"getMonth\",\"getDate\",\"isNumber\",\"value\",\"isNaN\",\"parseFloat\",\"toFixed\",\"getBasePrice\",\"playerRank\",\"price40K\",\"price30K\",\"price20K\",\"price10K\",\"type\",\"id\",\"onClick\",\"input\",\"document\",\"getElementById\",\"addEventListener\",\"readXlsxFile\",\"files\",\"then\",\"rows\",\"forEach\",\"playerInfo\",\"playerId\",\"playerName\",\"teamName\",\"matches\",\"runs\",\"ballsFaced\",\"strikeRate\",\"wickets\",\"playingRole\",\"economy\",\"bowlOvers\",\"battingAverage\",\"highestScore\",\"bestBowling\",\"hatTricks\",\"catches\",\"totalPoints\",\"batPoints\",\"bowlPoints\",\"fieldingPoints\",\"isExternalPlayer\",\"isRetainedPlayer\",\"isOwnerPlayer\",\"overallRank\",\"batRank\",\"bowlRank\",\"push\",\"playersCount\",\"length\",\"ceil\",\"console\",\"log\",\"i\",\"slide\",\"addNewSlide\",\"matchesX\",\"runsX\",\"wicketsX\",\"addImage\",\"path\",\"bgImage\",\"x\",\"y\",\"w\",\"h\",\"retained\",\"sold\",\"addText\",\"fontSize\",\"color\",\"align\",\"bold\",\"fill\",\"tableHeaderOptions\",\"valign\",\"fontFace\",\"border\",\"pt\",\"tableRowOptions\",\"matchRows\",\"text\",\"options\",\"dynamicMatchRows\",\"matchesTabOpts\",\"rowH\",\"addTable\",\"runsRows\",\"dynamicRunsRows\",\"runsTabOpts\",\"wicketsRows\",\"dynamicWicketsRows\",\"wicketsTabOpts\",\"save\",\"CLIENT_ID\",\"API_KEY\",\"MTPL_MENS_SPREADSHEET_ID\",\"ReactGoogleSheets\",\"connect\",\"_this\",\"this\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"_useState3\",\"_useState4\",\"react_google_sheets_default\",\"clientId\",\"Constants\",\"apiKey\",\"spreadsheetId\",\"afterLoading\",\"setState\",\"sheetLoaded\",\"state\",\"className\",\"props\",\"getSheetsData\",\"updateCell\",\"error\",\"MainMenu\",\"react_router_dom\",\"to\",\"App\",\"App_MainMenu\",\"react_router\",\"exact\",\"component\",\"exaxt\",\"DataComponent\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nfunction Home() {\\n\\n  return (\\n    <div >\\n      <div>\\n        <div>\\n          <h1 ><center>Welcome to MTPL</center></h1>\\n        </div>\\n        <div>\\n          <center>\\n            <h1>\\n\\n            </h1>\\n          </center>\\n        </div>\\n\\n      </div>\\n    </div>\\n  )\\n};\\n\\nexport default Home;\",\"import React from 'react';\\nimport bgImage from './images/bg-image.png';\\nimport retained from './images/retained.png';\\nimport sold from './images/sold.png';\\n//import preOwned from './images/preOwned.png';\\nimport readXlsxFile from 'read-excel-file'\\n\\nvar PptxGenJS = require(\\\"pptxgenjs\\\");\\nvar pptx;\\n\\nfunction PPTGen() {\\n    var xcelData = [];\\n    const uploadXLSXFile = () => {\\n        const input = document.getElementById('input')\\n\\n        input.addEventListener('change', () => {\\n            readXlsxFile(input.files[0]).then((rows) => {\\n                rows.forEach(function (value) {\\n                    let playerInfo = {};\\n                    if (playerInfo.playerId !== null) {\\n                        playerInfo.playerId = value[0];\\n                        playerInfo.playerName = value[1];\\n                        playerInfo.teamName = value[4];\\n                        playerInfo.matches = value[5];\\n                        playerInfo.runs = value[6];\\n                        playerInfo.ballsFaced = value[7];\\n                        playerInfo.strikeRate = isNumber(value[8]);\\n                        playerInfo.wickets = value[9];\\n                        playerInfo.playingRole = playerInfo.wickets ? 'All Rounder' : 'Batting'\\n                        playerInfo.economy = isNumber(value[10]);\\n                        playerInfo.bowlOvers = value[11];\\n                        playerInfo.battingAverage = isNumber(value[12]);\\n                        playerInfo.highestScore = value[13];\\n                        playerInfo.bestBowling = ExcelDateToJSDate(value[14]);\\n                        playerInfo.hatTricks = value[15];\\n                        playerInfo.catches = value[16];\\n                        playerInfo.totalPoints = value[17];\\n                        playerInfo.batPoints = value[18];\\n                        playerInfo.bowlPoints = value[19];\\n                        playerInfo.fieldingPoints = value[20];\\n                        playerInfo.isExternalPlayer = value[21];\\n                        playerInfo.isRetainedPlayer = value[22];\\n                        playerInfo.isOwnerPlayer = value[23];\\n                        playerInfo.overallRank = value[24];\\n                        playerInfo.batRank = value[25];\\n                        playerInfo.bowlRank = value[26];\\n                        xcelData.push(playerInfo);\\n                    }\\n                })\\n            })\\n        })\\n    }\\n\\n    const ExcelDateToJSDate = (date) => {\\n        if (date === 0)\\n            return \\\"-\\\";\\n        var d = new Date(Math.round((date - 25568) * 86400 * 1000));\\n        return (d.getMonth() + 1) + \\\"/\\\" + d.getDate();\\n    }\\n    const isNumber = (value) => {\\n        if (isNaN(value)) {\\n            return value;\\n        }\\n        return parseFloat(value).toFixed(2);\\n    }\\n\\n    const getBasePrice = (playerRank, price40K, price30K, price20K, price10K) => {\\n        let basePrice = \\\"\\\";\\n        if (playerRank >= price10K) {\\n            basePrice = \\\"$ 10,000 /-\\\";\\n        } else if (playerRank >= price20K) {\\n            basePrice = \\\"$ 20,000 /-\\\";\\n        } else if (playerRank >= price30K) {\\n            basePrice = \\\"$ 30,000 /-\\\";\\n        } else if (playerRank >= price40K) {\\n            basePrice = \\\"$ 40,000 /-\\\";\\n        } else {\\n            basePrice = \\\"$ 50,000 /-\\\";\\n        }\\n        return basePrice;\\n    }\\n    const generatePPT = () => {\\n        var playersCount = xcelData.length;\\n        var price50K = 1;\\n        var price40K = price50K + Math.ceil(((playersCount - 1) * 10) / 100);\\n        var price30K = price40K + Math.ceil(((playersCount - 1) * 15) / 100);\\n        var price20K = price30K + Math.ceil(((playersCount - 1) * 20) / 100);\\n        var price10K = price20K + Math.ceil(((playersCount - 1) * 25) / 100);\\n        console.log('50K : ' + price50K + ' ;40K : ' + price40K + ' ;30K : ' + price30K\\n            + ' ;20K : ' + price20K + ' ;10K : ' + price10K);\\n        pptx = new PptxGenJS();\\n        for (let i = 0; i < playersCount; i++) {\\n\\n            let playerInfo = xcelData[i];\\n            if (playerInfo.playerId !== 'player_id') {\\n                var slide = pptx.addNewSlide();\\n                var centerAlignOpts = { x: 1.0, y: 0.2, fontSize: 40, color: '000000', h: 1.4, align: 'center', bold: true };\\n                var playerRankOpts = { x: 4.0, y: 1.8, fontSize: 16, color: 'FFFF00', bold: true };\\n                var playerBasePriceOpts = { x: 6.7, y: 0.3, fontSize: 20, color: '000000', bold: true, w: 3.3, fill: 'FFFF00' };\\n                var playerIdOpts = { x: 4.0, y: 2.1, fontSize: 16, color: 'FFFF00', bold: true };\\n                var teamNameOpts = { x: 4.0, y: 2.4, fontSize: 16, color: 'FFFF00', bold: true };\\n                var playingRoleOpts = { x: 4.0, y: 2.7, fontSize: 16, color: 'FFFF00', bold: true };\\n\\n                let matchesX = 1.7;\\n                let runsX = 3.4;\\n                let wicketsX = 5.1;\\n\\n                if (playerInfo.wickets) {\\n                    matchesX = 0.1;\\n                    runsX = 0.7;\\n                    wicketsX = 5.5;\\n                } else {\\n                    matchesX = 2.4;\\n                    runsX = 3.7;\\n                }\\n\\n                slide.addImage({ path: bgImage, x: 0, y: 0, w: 10, h: 5.60 })\\n\\n                if (playerInfo.isRetainedPlayer) {\\n                    slide.addImage({ path: retained, x: 1, y: 2.0, w: 2.2, h: 1 })\\n                }\\n\\n                if (playerInfo.isOwnerPlayer) {\\n                    slide.addImage({ path: sold, x: 1.2, y: 2.0, w: 2, h: 1 })\\n                }\\n\\n                if (playerInfo.isExternalPlayer) {\\n                    // External Player\\n                    slide.addText('Associated with Other MN Cricket League(s)', { x: 0, y: 0, fontSize: 10, color: 'C0C0C0', h: 0.3, w: 10, align: 'center', bold: true, fill: 'B22222' });\\n                    slide.addText('Associated with Other MN Cricket League(s)', { x: 0, y: 5.33, fontSize: 10, color: 'C0C0C0', h: 0.3, w: 10, align: 'center', bold: true, fill: 'B22222' });\\n                }\\n\\n                // Player Name\\n                slide.addText(playerInfo.playerName, centerAlignOpts);\\n\\n                // Overall Rank\\n                slide.addText('Base Price: ' + getBasePrice(playerInfo.overallRank, price40K, price30K, price20K, price10K), playerBasePriceOpts);\\n\\n                // Overall Rank\\n                slide.addText('Overall Rank: ' + playerInfo.overallRank, playerRankOpts);\\n\\n                // Player ID\\n                slide.addText('Player ID: ' + playerInfo.playerId, playerIdOpts);\\n                // Team Name\\n\\n                slide.addText('Team Name: ' + playerInfo.teamName, teamNameOpts);\\n                // Playing Role\\n\\n                slide.addText('Playing Role: ' + playerInfo.playingRole, playingRoleOpts);\\n\\n                // Batting Stats\\n                slide.addText('Batting Stats', { x: runsX, y: 3.5, w: 4.6, fontSize: 16, fill: 'FF8C00', color: '000000', bold: true });\\n\\n                // Batting Style\\n                //slide.addText('Batting Role: ' + playerInfo.battingRole, battingRoleOpts);\\n                // Bowling Style\\n                //slide.addText('Bowling Role: ' + playerInfo.bowlingRole, bowlingRoleOpts);\\n\\n                let tableHeaderOptions = { valign: 't', align: 'c', fontFace: 'Arial', border: { pt: 0 } };\\n                let tableRowOptions = { valign: 't', align: 'c', fontFace: 'Arial', border: { pt: 0 } };\\n\\n                // Matches\\n                var matchRows = [\\n                    [\\n                        { text: '(M)', options: tableHeaderOptions }\\n                    ]\\n                ];\\n                let dynamicMatchRows = [{ text: playerInfo.matches, options: tableRowOptions }];\\n                matchRows.push(dynamicMatchRows);\\n\\n                var matchesTabOpts = { x: matchesX, y: 3.8, w: 0.5, rowH: 0.6, fill: '5A81E0', fontSize: 16, color: 'FFFFFF', valign: 'm', bold: true };\\n                slide.addTable(matchRows, matchesTabOpts);\\n\\n                // Runs\\n                var runsRows = [\\n                    [\\n                        { text: 'Rank', options: tableHeaderOptions },\\n                        { text: 'Runs', options: tableHeaderOptions },\\n                        { text: 'S/R', options: tableHeaderOptions },\\n                        { text: 'HS', options: tableHeaderOptions },\\n                        { text: 'Ave', options: tableHeaderOptions },\\n                        { text: '(C)', options: tableHeaderOptions }\\n                    ]\\n                ];\\n                var dynamicRunsRows = [\\n                    { text: playerInfo.batRank, options: tableRowOptions },\\n                    { text: playerInfo.runs, options: tableRowOptions },\\n                    { text: playerInfo.strikeRate, options: tableRowOptions },\\n                    { text: playerInfo.highestScore, options: tableRowOptions },\\n                    { text: playerInfo.battingAverage, options: tableRowOptions },\\n                    { text: playerInfo.catches, options: tableRowOptions }\\n                ];\\n\\n                runsRows.push(dynamicRunsRows);\\n                //runsRows.push([{ text: 'S/R : ' + playerInfo.strikeRate, options: tableRowOptions }]);\\n                var runsTabOpts = { x: runsX, y: 3.8, w: 4.6, rowH: 0.6, fill: '5A81E0', fontSize: 16, color: 'FFFFFF', valign: 'm', bold: true };\\n                slide.addTable(runsRows, runsTabOpts);\\n\\n                if (playerInfo.playingRole !== 'Batting') {\\n                    // Batting Stats\\n                    slide.addText('Bowling Stats', { x: wicketsX, y: 3.5, w: 4.3, fontSize: 16, fill: 'FF8C00', color: '000000', bold: true });\\n                    // Wickets\\n                    var wicketsRows = [\\n                        [\\n                            { text: 'Rank', options: tableHeaderOptions },\\n                            { text: '(W)', options: tableHeaderOptions },\\n                            { text: '(O)', options: tableHeaderOptions },\\n                            { text: 'Econ', options: tableHeaderOptions },\\n                            { text: 'BB', options: tableHeaderOptions },\\n                            { text: 'H/T', options: tableHeaderOptions },\\n                        ]\\n                    ];\\n                    let dynamicWicketsRows = [\\n                        { text: playerInfo.bowlRank, options: tableRowOptions },\\n                        { text: playerInfo.wickets, options: tableRowOptions },\\n                        { text: playerInfo.bowlOvers, options: tableRowOptions },\\n                        { text: playerInfo.economy, options: tableRowOptions },\\n                        { text: playerInfo.bestBowling, options: tableRowOptions },\\n                        { text: playerInfo.hatTricks, options: tableRowOptions },\\n                    ];\\n                    wicketsRows.push(dynamicWicketsRows);\\n                    var wicketsTabOpts = { x: wicketsX, y: 3.8, w: 4.3, rowH: 0.6, fill: '5A81E0', fontSize: 16, color: 'FFFFFF', valign: 'm', bold: true };\\n\\n                    slide.addTable(wicketsRows, wicketsTabOpts);\\n                }\\n            }\\n        }\\n        pptx.save();\\n\\n        console.log('Complete');\\n    }\\n\\n    return (\\n        <div >\\n            <div>\\n                <div>\\n                    <h1 ><center>MTPL Players Slide Generator</center></h1>\\n                </div>\\n                <div>\\n                    <center>\\n                        <h1>\\n                            <input type=\\\"file\\\" id=\\\"input\\\" onClick={uploadXLSXFile} />\\n                        </h1>\\n                    </center>\\n                </div>\\n\\n                <div>\\n\\n                    <center>\\n                        <h1>\\n                            <button onClick={generatePPT}>Generate MTPL Slides</button>\\n                        </h1>\\n                    </center>\\n                </div>\\n            </div>\\n        </div>\\n    )\\n};\\n\\nexport default PPTGen;\",\"// Costants for the Project\\nexport const CLIENT_ID = \\\"267639530824-5egrbu2hfl6e7g067pbhot3q78mov1pf.apps.googleusercontent.com\\\";                        \\nexport const API_KEY = \\\"2R9N3HATOemkNgV112UVWXwR\\\";\\nexport const MTPL_MENS_SPREADSHEET_ID = \\\"1ls3vgQ8F0rZSgj6pk3bzdr1bFRMdJs0JTsRqHRj7tlU\\\";\\n\",\"import ReactGoogleSheets from 'react-google-sheets';\\nimport * as Constants from './Constants'\\nimport React, { useState } from 'react';\\nimport './App.css';\\n\\nfunction DataComponent() {\\n\\n  const [sheetLoaded, setSheetLoaded] = useState(false);\\n  const [players, setPlayers] = useState([]);\\n  \\n    return (\\n      <ReactGoogleSheets \\n        clientId={Constants.CLIENT_ID}\\n        apiKey={Constants.API_KEY}\\n        spreadsheetId={Constants.MTPL_MENS_SPREADSHEET_ID}\\n        afterLoading={() => this.setState({sheetLoaded: true})}\\n      >\\n        {this.state.sheetLoaded ? \\n          <div className=\\\"AuctionBody\\\">\\n            {/* Access Data */}\\n            {console.log('Your sheet data : ', this.props.getSheetsData())}\\n            \\n            \\n            {/* Previous Player Info*/}\\n            <button onClick={() => {\\n             \\n            }}>Previous</button>\\n\\n            <div>\\n\\n            </div>\\n\\n            {/* Next Player Info*/}\\n            <button onClick={() => {\\n          \\n            }}>Next</button>\\n\\n            {/* Update Data */}\\n            <button onClick={() => {\\n              this.props.updateCell(\\n                'MTPL Players', // sheetName\\n                'G', // column\\n                4, // row\\n                'Sholay - 11', // value\\n                null, // successCallback\\n                (error) => {\\n                  console.log('error', error)\\n                } // errorCallback\\n              );\\n              this.props.updateCell(\\n                'MTPL Players', // sheetName\\n                'I', // column\\n                4, // row\\n                '50000', // value\\n                null, // successCallback\\n                (error) => {\\n                  console.log('error', error)\\n                } // errorCallback\\n              );\\n            }}>update cell!</button>\\n          </div>\\n          :\\n          'loading...'\\n        }\\n      </ReactGoogleSheets>\\n    )\\n  }\\n \\nexport default ReactGoogleSheets.connect(DataComponent);\\n \",\"import React from 'react';\\nimport './App.css';\\nimport Home from './Home.js';\\nimport PPTGen from './pptGen.js';\\nimport DataComponent from './DataComponent.js';\\n//import mtbcLogo from './images/MTBC_logo.png';\\n//import mtplLogo from './images/MTPL_logo.png';\\n//<img src={mtbcLogo} className=\\\"MTBC-logo\\\" alt=\\\"MTBC\\\" />\\n//<img src={mtplLogo} className=\\\"MTPL-logo\\\" alt=\\\"MTPL\\\" />\\n\\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\\n\\nconst MainMenu = () => {\\n  return (\\n    <div>\\n      <Link to=\\\"/\\\">\\n        <button>home</button>\\n      </Link>\\n      <Link to=\\\"/ppt\\\">\\n        <button>PPT Generator</button>\\n      </Link>\\n      <Link to=\\\"/auction\\\">\\n        <button>Auction</button>\\n      </Link>\\n    </div>\\n  );\\n};\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <header className=\\\"App-header\\\">\\n        <span>Welcome to MTPL 2019 </span>\\n        <span>< MainMenu /> </span>\\n      </header>\\n      <div>\\n        <Route exact path=\\\"/\\\" component={Home} />\\n        <Route exaxt path=\\\"/ppt\\\" component={PPTGen} />\\n        <Route exact path=\\\"/auction\\\" component={DataComponent} />\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/bg-image.a990a9b1.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/retained.84e70c63.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/sold.6e4297b7.png\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{124:function(e,t){},136:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),l=n(67),i=n.n(l);n(80),n(37);var r,c=function(){return o.a.createElement(\"div\",null,o.a.createElement(\"div\",null,o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,o.a.createElement(\"center\",null,\"Welcome to MTPL\"))),o.a.createElement(\"div\",null,o.a.createElement(\"center\",null,o.a.createElement(\"h1\",null)))))},s=n(68),d=n.n(s),u=n(69),p=n.n(u),m=n(70),f=n.n(m),h=n(138),x=n(81);var g=function(){var e=[],t=function(e){if(0===e)return\"-\";var t=new Date(Math.round(86400*(e-25568)*1e3));return t.getMonth()+1+\"/\"+t.getDate()},n=function(e){return isNaN(e)?e:parseFloat(e).toFixed(2)},a=function(e,t,n,a,o){return e>=o?\"$ 10,000 /-\":e>=a?\"$ 20,000 /-\":e>=n?\"$ 30,000 /-\":e>=t?\"$ 40,000 /-\":\"$ 50,000 /-\"};return o.a.createElement(\"div\",null,o.a.createElement(\"div\",null,o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,o.a.createElement(\"center\",null,\"MTPL Players Slide Generator\"))),o.a.createElement(\"div\",null,o.a.createElement(\"center\",null,o.a.createElement(\"h1\",null,o.a.createElement(\"input\",{type:\"file\",id:\"input\",onClick:function(){var a=document.getElementById(\"input\");a.addEventListener(\"change\",function(){Object(h.a)(a.files[0]).then(function(a){a.forEach(function(a){var o={};null!==o.playerId&&(o.playerId=a[0],o.playerName=a[1],o.teamName=a[4],o.matches=a[5],o.runs=a[6],o.ballsFaced=a[7],o.strikeRate=n(a[8]),o.wickets=a[9],o.playingRole=o.wickets?\"All Rounder\":\"Batting\",o.economy=n(a[10]),o.bowlOvers=a[11],o.battingAverage=n(a[12]),o.highestScore=a[13],o.bestBowling=t(a[14]),o.hatTricks=a[15],o.catches=a[16],o.totalPoints=a[17],o.batPoints=a[18],o.bowlPoints=a[19],o.fieldingPoints=a[20],o.isExternalPlayer=a[21],o.isRetainedPlayer=a[22],o.isOwnerPlayer=a[23],o.overallRank=a[24],o.batRank=a[25],o.bowlRank=a[26],e.push(o))})})})}})))),o.a.createElement(\"div\",null,o.a.createElement(\"center\",null,o.a.createElement(\"h1\",null,o.a.createElement(\"button\",{onClick:function(){var t=e.length,n=1+Math.ceil(10*(t-1)/100),o=n+Math.ceil(15*(t-1)/100),l=o+Math.ceil(20*(t-1)/100),i=l+Math.ceil(25*(t-1)/100);console.log(\"50K : 1 ;40K : \"+n+\" ;30K : \"+o+\" ;20K : \"+l+\" ;10K : \"+i),r=new x;for(var c=0;c<t;c++){var s=e[c];if(\"player_id\"!==s.playerId){var u=r.addNewSlide(),m=1.7,h=3.4,g=5.1;s.wickets?(m=.1,h=.7,g=5.5):(m=2.4,h=3.7),u.addImage({path:d.a,x:0,y:0,w:10,h:5.6}),s.isRetainedPlayer&&u.addImage({path:p.a,x:1,y:2,w:2.2,h:1}),s.isOwnerPlayer&&u.addImage({path:f.a,x:1.2,y:2,w:2,h:1}),s.isExternalPlayer&&(u.addText(\"Associated with Other MN Cricket League(s)\",{x:0,y:0,fontSize:10,color:\"C0C0C0\",h:.3,w:10,align:\"center\",bold:!0,fill:\"B22222\"}),u.addText(\"Associated with Other MN Cricket League(s)\",{x:0,y:5.33,fontSize:10,color:\"C0C0C0\",h:.3,w:10,align:\"center\",bold:!0,fill:\"B22222\"})),u.addText(s.playerName,{x:1,y:.2,fontSize:40,color:\"000000\",h:1.4,align:\"center\",bold:!0}),u.addText(\"Base Price: \"+a(s.overallRank,n,o,l,i),{x:6.7,y:.3,fontSize:20,color:\"000000\",bold:!0,w:3.3,fill:\"FFFF00\"}),u.addText(\"Overall Rank: \"+s.overallRank,{x:4,y:1.8,fontSize:16,color:\"FFFF00\",bold:!0}),u.addText(\"Player ID: \"+s.playerId,{x:4,y:2.1,fontSize:16,color:\"FFFF00\",bold:!0}),u.addText(\"Team Name: \"+s.teamName,{x:4,y:2.4,fontSize:16,color:\"FFFF00\",bold:!0}),u.addText(\"Playing Role: \"+s.playingRole,{x:4,y:2.7,fontSize:16,color:\"FFFF00\",bold:!0}),u.addText(\"Batting Stats\",{x:h,y:3.5,w:4.6,fontSize:16,fill:\"FF8C00\",color:\"000000\",bold:!0});var v={valign:\"t\",align:\"c\",fontFace:\"Arial\",border:{pt:0}},b={valign:\"t\",align:\"c\",fontFace:\"Arial\",border:{pt:0}},E=[[{text:\"(M)\",options:v}]],F=[{text:s.matches,options:b}];E.push(F);var w={x:m,y:3.8,w:.5,rowH:.6,fill:\"5A81E0\",fontSize:16,color:\"FFFFFF\",valign:\"m\",bold:!0};u.addTable(E,w);var y=[[{text:\"Rank\",options:v},{text:\"Runs\",options:v},{text:\"S/R\",options:v},{text:\"HS\",options:v},{text:\"Ave\",options:v},{text:\"(C)\",options:v}]],k=[{text:s.batRank,options:b},{text:s.runs,options:b},{text:s.strikeRate,options:b},{text:s.highestScore,options:b},{text:s.battingAverage,options:b},{text:s.catches,options:b}];y.push(k);var S={x:h,y:3.8,w:4.6,rowH:.6,fill:\"5A81E0\",fontSize:16,color:\"FFFFFF\",valign:\"m\",bold:!0};if(u.addTable(y,S),\"Batting\"!==s.playingRole){u.addText(\"Bowling Stats\",{x:g,y:3.5,w:4.3,fontSize:16,fill:\"FF8C00\",color:\"000000\",bold:!0});var R=[[{text:\"Rank\",options:v},{text:\"(W)\",options:v},{text:\"(O)\",options:v},{text:\"Econ\",options:v},{text:\"BB\",options:v},{text:\"H/T\",options:v}]],T=[{text:s.bowlRank,options:b},{text:s.wickets,options:b},{text:s.bowlOvers,options:b},{text:s.economy,options:b},{text:s.bestBowling,options:b},{text:s.hatTricks,options:b}];R.push(T);var P={x:g,y:3.8,w:4.3,rowH:.6,fill:\"5A81E0\",fontSize:16,color:\"FFFFFF\",valign:\"m\",bold:!0};u.addTable(R,P)}}}r.save(),console.log(\"Complete\")}},\"Generate MTPL Slides\"))))))},v=n(35),b=n(32),E=n.n(b),F=\"267639530824-5egrbu2hfl6e7g067pbhot3q78mov1pf.apps.googleusercontent.com\",w=\"2R9N3HATOemkNgV112UVWXwR\",y=\"1ls3vgQ8F0rZSgj6pk3bzdr1bFRMdJs0JTsRqHRj7tlU\";var k=E.a.connect(function(){var e=this,t=Object(a.useState)(!1),n=Object(v.a)(t,2),l=(n[0],n[1],Object(a.useState)([])),i=Object(v.a)(l,2);return i[0],i[1],o.a.createElement(E.a,{clientId:F,apiKey:w,spreadsheetId:y,afterLoading:function(){return e.setState({sheetLoaded:!0})}},this.state.sheetLoaded?o.a.createElement(\"div\",{className:\"AuctionBody\"},console.log(\"Your sheet data : \",this.props.getSheetsData()),o.a.createElement(\"button\",{onClick:function(){}},\"Previous\"),o.a.createElement(\"div\",null),o.a.createElement(\"button\",{onClick:function(){}},\"Next\"),o.a.createElement(\"button\",{onClick:function(){e.props.updateCell(\"MTPL Players\",\"G\",4,\"Sholay - 11\",null,function(e){console.log(\"error\",e)}),e.props.updateCell(\"MTPL Players\",\"I\",4,\"50000\",null,function(e){console.log(\"error\",e)})}},\"update cell!\")):\"loading...\")}),S=n(19),R=n(10),T=function(){return o.a.createElement(\"div\",null,o.a.createElement(S.b,{to:\"/\"},o.a.createElement(\"button\",null,\"home\")),o.a.createElement(S.b,{to:\"/ppt\"},o.a.createElement(\"button\",null,\"PPT Generator\")),o.a.createElement(S.b,{to:\"/auction\"},o.a.createElement(\"button\",null,\"Auction\")))};var P=function(){return o.a.createElement(S.a,null,o.a.createElement(\"header\",{className:\"App-header\"},o.a.createElement(\"span\",null,\"Welcome to MTPL 2019 \"),o.a.createElement(\"span\",null,o.a.createElement(T,null),\" \")),o.a.createElement(\"div\",null,o.a.createElement(R.a,{exact:!0,path:\"/\",component:c}),o.a.createElement(R.a,{exaxt:!0,path:\"/ppt\",component:g}),o.a.createElement(R.a,{exact:!0,path:\"/auction\",component:k})))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(P,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},37:function(e,t,n){},39:function(e,t){},68:function(e,t,n){e.exports=n.p+\"static/media/bg-image.a990a9b1.png\"},69:function(e,t,n){e.exports=n.p+\"static/media/retained.84e70c63.png\"},70:function(e,t,n){e.exports=n.p+\"static/media/sold.6e4297b7.png\"},75:function(e,t,n){e.exports=n(136)},80:function(e,t,n){},86:function(e,t){},87:function(e,t){},90:function(e,t){},92:function(e,t){}},[[75,1,2]]]);","extractedComments":[]}