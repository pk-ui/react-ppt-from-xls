{"ast":null,"code":"import _slicedToArray from \"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js\";\nimport ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants';\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction DataComponent() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        sheetLoaded = _useState2[0],\n        setSheetLoaded = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        players = _useState4[0],\n        setPlayers = _useState4[1];\n\n  return React.createElement(ReactGoogleSheets, {\n    clientId: Constants.CLIENT_ID,\n    apiKey: Constants.API_KEY,\n    spreadsheetId: Constants.MTPL_MENS_SPREADSHEET_ID,\n    afterLoading: () => this.setState({\n      sheetLoaded: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, this.state.sheetLoaded ? React.createElement(\"div\", {\n    className: \"AuctionBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, console.log('Your sheet data : ', this.props.getSheetsData()), React.createElement(\"button\", {\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Previous\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Next\"), React.createElement(\"button\", {\n    onClick: () => {\n      this.props.updateCell('MTPL Players', // sheetName\n      'G', // column\n      4, // row\n      'Sholay - 11', // value\n      null, // successCallback\n      error => {\n        console.log('error', error);\n      } // errorCallback\n      );\n      this.props.updateCell('MTPL Players', // sheetName\n      'I', // column\n      4, // row\n      '50000', // value\n      null, // successCallback\n      error => {\n        console.log('error', error);\n      } // errorCallback\n      );\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"update cell!\")) : 'loading...');\n}\n\nexport default ReactGoogleSheets.connect(DataComponent);","map":{"version":3,"sources":["/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js"],"names":["ReactGoogleSheets","Constants","React","useState","DataComponent","sheetLoaded","setSheetLoaded","players","setPlayers","CLIENT_ID","API_KEY","MTPL_MENS_SPREADSHEET_ID","setState","state","console","log","props","getSheetsData","updateCell","error","connect"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;AAEA,SAASC,aAAT,GAAyB;AAAA,oBAEeD,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAEhBE,WAFgB;AAAA,QAEHC,cAFG;;AAAA,qBAGOH,QAAQ,CAAC,EAAD,CAHf;AAAA;AAAA,QAGhBI,OAHgB;AAAA,QAGPC,UAHO;;AAKrB,SACE,oBAAC,iBAAD;AACE,IAAA,QAAQ,EAAEP,SAAS,CAACQ,SADtB;AAEE,IAAA,MAAM,EAAER,SAAS,CAACS,OAFpB;AAGE,IAAA,aAAa,EAAET,SAAS,CAACU,wBAH3B;AAIE,IAAA,YAAY,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACP,MAAAA,WAAW,EAAE;AAAd,KAAd,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,KAAKQ,KAAL,CAAWR,WAAX,GACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGS,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKC,KAAL,CAAWC,aAAX,EAAlC,CAFH,EAME;AAAQ,IAAA,OAAO,EAAE,MAAM,CAEtB,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAeE;AAAQ,IAAA,OAAO,EAAE,MAAM,CAEtB,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAoBE;AAAQ,IAAA,OAAO,EAAE,MAAM;AACrB,WAAKD,KAAL,CAAWE,UAAX,CACE,cADF,EACkB;AAChB,SAFF,EAEO;AACL,OAHF,EAGK;AACH,mBAJF,EAIiB;AACf,UALF,EAKQ;AACLC,MAAAA,KAAD,IAAW;AACTL,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB;AACD,OARH,CAQI;AARJ;AAUA,WAAKH,KAAL,CAAWE,UAAX,CACE,cADF,EACkB;AAChB,SAFF,EAEO;AACL,OAHF,EAGK;AACH,aAJF,EAIW;AACT,UALF,EAKQ;AACLC,MAAAA,KAAD,IAAW;AACTL,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB;AACD,OARH,CAQI;AARJ;AAUD,KArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBF,CADD,GA6CC,YAnDJ,CADF;AAwDH;;AAED,eAAenB,iBAAiB,CAACoB,OAAlB,CAA0BhB,aAA1B,CAAf","sourcesContent":["import ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants'\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction DataComponent() {\n\n  const [sheetLoaded, setSheetLoaded] = useState(false);\n  const [players, setPlayers] = useState([]);\n  \n    return (\n      <ReactGoogleSheets \n        clientId={Constants.CLIENT_ID}\n        apiKey={Constants.API_KEY}\n        spreadsheetId={Constants.MTPL_MENS_SPREADSHEET_ID}\n        afterLoading={() => this.setState({sheetLoaded: true})}\n      >\n        {this.state.sheetLoaded ? \n          <div className=\"AuctionBody\">\n            {/* Access Data */}\n            {console.log('Your sheet data : ', this.props.getSheetsData())}\n            \n            \n            {/* Previous Player Info*/}\n            <button onClick={() => {\n             \n            }}>Previous</button>\n\n            <div>\n\n            </div>\n\n            {/* Next Player Info*/}\n            <button onClick={() => {\n          \n            }}>Next</button>\n\n            {/* Update Data */}\n            <button onClick={() => {\n              this.props.updateCell(\n                'MTPL Players', // sheetName\n                'G', // column\n                4, // row\n                'Sholay - 11', // value\n                null, // successCallback\n                (error) => {\n                  console.log('error', error)\n                } // errorCallback\n              );\n              this.props.updateCell(\n                'MTPL Players', // sheetName\n                'I', // column\n                4, // row\n                '50000', // value\n                null, // successCallback\n                (error) => {\n                  console.log('error', error)\n                } // errorCallback\n              );\n            }}>update cell!</button>\n          </div>\n          :\n          'loading...'\n        }\n      </ReactGoogleSheets>\n    )\n}\n \nexport default ReactGoogleSheets.connect(DataComponent);\n "]},"metadata":{},"sourceType":"module"}