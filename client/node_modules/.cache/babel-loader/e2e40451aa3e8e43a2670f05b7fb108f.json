{"ast":null,"code":"const _ = require('../../../utils/under-dash');\n\nconst BaseXform = require('../base-xform');\n\nclass SheetFormatPropertiesXform extends BaseXform {\n  get tag() {\n    return 'sheetFormatPr';\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      const attributes = {\n        defaultRowHeight: model.defaultRowHeight,\n        outlineLevelRow: model.outlineLevelRow,\n        outlineLevelCol: model.outlineLevelCol,\n        'x14ac:dyDescent': model.dyDescent\n      }; // default value for 'defaultRowHeight' is 15, this should not be 'custom'\n\n      if (!model.defaultRowHeight || model.defaultRowHeight !== 15) {\n        attributes.customHeight = '1';\n      }\n\n      if (_.some(attributes, value => value !== undefined)) {\n        xmlStream.leafNode('sheetFormatPr', attributes);\n      }\n    }\n  }\n\n  parseOpen(node) {\n    if (node.name === 'sheetFormatPr') {\n      this.model = {\n        defaultRowHeight: parseFloat(node.attributes.defaultRowHeight || '0'),\n        dyDescent: parseFloat(node.attributes['x14ac:dyDescent'] || '0'),\n        outlineLevelRow: parseInt(node.attributes.outlineLevelRow || '0', 10),\n        outlineLevelCol: parseInt(node.attributes.outlineLevelCol || '0', 10)\n      };\n      return true;\n    }\n\n    return false;\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n\n}\n\nmodule.exports = SheetFormatPropertiesXform;","map":null,"metadata":{},"sourceType":"script"}