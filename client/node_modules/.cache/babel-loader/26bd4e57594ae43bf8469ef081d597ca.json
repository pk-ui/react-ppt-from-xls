{"ast":null,"code":"var _jsxFileName = \"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js\";\nimport ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants';\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass testDataComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sheetLoaded: false,\n      players: []\n    };\n  }\n\n  render() {\n    const populatePlayerInfo = row => {\n      let player = {};\n      player.playerId = 1;\n      player.playerId = 2;\n      return player;\n    };\n\n    const createPlayerProfile = () => {\n      let xcelData = this.props.getSheetsData();\n      console.log(xcelData.length);\n      let auctionData = {};\n\n      for (let i = 0; i < xcelData.length; i++) {}\n\n      return React.createElement(\"div\", {\n        className: \"AuctionBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, console.log('Your sheet data : ', this.props.getSheetsData()), React.createElement(\"button\", {\n        onClick: () => {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Previous\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Next\"), React.createElement(\"button\", {\n        onClick: () => {\n          this.props.updateCell('MTPL Players', // sheetName\n          'G', // column\n          4, // row\n          'Sholay - 11', // value\n          null, // successCallback\n          error => {\n            console.log('error', error);\n          } // errorCallback\n          );\n          this.props.updateCell('MTPL Players', // sheetName\n          'I', // column\n          4, // row\n          '50000', // value\n          null, // successCallback\n          error => {\n            console.log('error', error);\n          } // errorCallback\n          );\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"update cell!\"));\n    };\n\n    return React.createElement(ReactGoogleSheets, {\n      clientId: Constants.CLIENT_ID,\n      apiKey: Constants.API_KEY,\n      spreadsheetId: Constants.MTPL_MENS_SPREADSHEET_ID,\n      afterLoading: () => this.setState({\n        sheetLoaded: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.sheetLoaded ? createPlayerProfile() : 'loading...');\n  }\n\n}\n\nexport default ReactGoogleSheets.connect(testDataComponent);","map":{"version":3,"sources":["/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js"],"names":["ReactGoogleSheets","Constants","React","Component","testDataComponent","constructor","props","state","sheetLoaded","players","render","populatePlayerInfo","row","player","playerId","createPlayerProfile","xcelData","getSheetsData","console","log","length","auctionData","i","updateCell","error","CLIENT_ID","API_KEY","MTPL_MENS_SPREADSHEET_ID","setState","connect"],"mappings":";AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;AAExCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAKD;;AACDC,EAAAA,MAAM,GAAG;AAEP,UAAMC,kBAAkB,GAAIC,GAAD,IAAS;AAClC,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACC,QAAP,GAAkB,CAAlB;AACAD,MAAAA,MAAM,CAACC,QAAP,GAAkB,CAAlB;AAEA,aAAOD,MAAP;AACD,KAND;;AAQA,UAAME,mBAAmB,GAAG,MAAM;AAChC,UAAIC,QAAQ,GAAG,KAAKV,KAAL,CAAWW,aAAX,EAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,MAArB;AACA,UAAIC,WAAW,GAAG,EAAlB;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGN,QAAQ,CAACI,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC,CAEtC;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGJ,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKb,KAAL,CAAWW,aAAX,EAAlC,CAFH,EAUE;AAAQ,QAAA,OAAO,EAAE,MAAM,CAEtB,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAmBE;AAAQ,QAAA,OAAO,EAAE,MAAM,CAEtB,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,EAwBE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrB,eAAKX,KAAL,CAAWiB,UAAX,CACE,cADF,EACkB;AAChB,aAFF,EAEO;AACL,WAHF,EAGK;AACH,uBAJF,EAIiB;AACf,cALF,EAKQ;AACLC,UAAAA,KAAD,IAAW;AACTN,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,KAArB;AACD,WARH,CAQI;AARJ;AAUA,eAAKlB,KAAL,CAAWiB,UAAX,CACE,cADF,EACkB;AAChB,aAFF,EAEO;AACL,WAHF,EAGK;AACH,iBAJF,EAIW;AACT,cALF,EAKQ;AACLC,UAAAA,KAAD,IAAW;AACTN,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,KAArB;AACD,WARH,CAQI;AARJ;AAUD,SArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxBF,CADF;AAiDD,KAzDD;;AA2DA,WACE,oBAAC,iBAAD;AACE,MAAA,QAAQ,EAAEvB,SAAS,CAACwB,SADtB;AAEE,MAAA,MAAM,EAAExB,SAAS,CAACyB,OAFpB;AAGE,MAAA,aAAa,EAAEzB,SAAS,CAAC0B,wBAH3B;AAIE,MAAA,YAAY,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEpB,QAAAA,WAAW,EAAE;AAAf,OAAd,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKD,KAAL,CAAWC,WAAX,GAAyBO,mBAAmB,EAA5C,GAAiD,YANpD,CADF;AAUD;;AAzFuC;;AA4F1C,eAAef,iBAAiB,CAAC6B,OAAlB,CAA0BzB,iBAA1B,CAAf","sourcesContent":["import ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants'\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass testDataComponent extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      sheetLoaded: false,\n      players: []\n\n    }\n  }\n  render() {\n\n    const populatePlayerInfo = (row) => {\n      let player = {};\n      player.playerId = 1;\n      player.playerId = 2;\n\n      return player;\n    }\n\n    const createPlayerProfile = () => {\n      let xcelData = this.props.getSheetsData();\n      console.log(xcelData.length);\n      let auctionData = {};\n      for(let i=0; i < xcelData.length; i++) {\n\n      }\n    \n      return (\n        <div className=\"AuctionBody\">\n          {/* Access Data */}\n          {console.log('Your sheet data : ', this.props.getSheetsData())}\n\n\n          { /* this.state.players.push(); */}\n\n\n\n          {/* Previous Player Info*/}\n          <button onClick={() => {\n\n          }}>Previous</button>\n\n          <div>\n\n          </div>\n\n          {/* Next Player Info*/}\n          <button onClick={() => {\n\n          }}>Next</button>\n\n          {/* Update Data */}\n          <button onClick={() => {\n            this.props.updateCell(\n              'MTPL Players', // sheetName\n              'G', // column\n              4, // row\n              'Sholay - 11', // value\n              null, // successCallback\n              (error) => {\n                console.log('error', error)\n              } // errorCallback\n            );\n            this.props.updateCell(\n              'MTPL Players', // sheetName\n              'I', // column\n              4, // row\n              '50000', // value\n              null, // successCallback\n              (error) => {\n                console.log('error', error)\n              } // errorCallback\n            );\n          }}>update cell!</button>\n        </div>\n      )\n    }\n\n    return (\n      <ReactGoogleSheets\n        clientId={Constants.CLIENT_ID}\n        apiKey={Constants.API_KEY}\n        spreadsheetId={Constants.MTPL_MENS_SPREADSHEET_ID}\n        afterLoading={() => this.setState({ sheetLoaded: true })}\n      >\n        {this.state.sheetLoaded ? createPlayerProfile() : 'loading...'}\n      </ReactGoogleSheets>\n    )\n  }\n}\n\nexport default ReactGoogleSheets.connect(testDataComponent);\n"]},"metadata":{},"sourceType":"module"}