{"ast":null,"code":"const BaseXform = require('../base-xform');\n\nclass DateXform extends BaseXform {\n  constructor(options) {\n    super();\n    this.tag = options.tag;\n    this.attr = options.attr;\n    this.attrs = options.attrs;\n\n    this._format = options.format || function (dt) {\n      try {\n        if (Number.isNaN(dt.getTime())) return '';\n        return dt.toISOString();\n      } catch (e) {\n        return '';\n      }\n    };\n\n    this._parse = options.parse || function (str) {\n      return new Date(str);\n    };\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      xmlStream.openNode(this.tag);\n\n      if (this.attrs) {\n        xmlStream.addAttributes(this.attrs);\n      }\n\n      if (this.attr) {\n        xmlStream.addAttribute(this.attr, this._format(model));\n      } else {\n        xmlStream.writeText(this._format(model));\n      }\n\n      xmlStream.closeNode();\n    }\n  }\n\n  parseOpen(node) {\n    if (node.name === this.tag) {\n      if (this.attr) {\n        this.model = this._parse(node.attributes[this.attr]);\n      } else {\n        this.text = [];\n      }\n    }\n  }\n\n  parseText(text) {\n    if (!this.attr) {\n      this.text.push(text);\n    }\n  }\n\n  parseClose() {\n    if (!this.attr) {\n      this.model = this._parse(this.text.join(''));\n    }\n\n    return false;\n  }\n\n}\n\nmodule.exports = DateXform;","map":null,"metadata":{},"sourceType":"script"}