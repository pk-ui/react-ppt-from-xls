{"ast":null,"code":"const XmlStream = require('../../../utils/xml-stream');\n\nconst utils = require('../../../utils/utils');\n\nconst BaseXform = require('../base-xform');\n\nconst CommentXform = require('./comment-xform');\n\nconst CommentsXform = module.exports = function () {\n  this.map = {\n    comment: new CommentXform()\n  };\n};\n\nutils.inherits(CommentsXform, BaseXform, {\n  COMMENTS_ATTRIBUTES: {\n    xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main'\n  }\n}, {\n  render(xmlStream, model) {\n    model = model || this.model;\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode('comments', CommentsXform.COMMENTS_ATTRIBUTES); // authors\n    // TODO: support authors properly\n\n    xmlStream.openNode('authors');\n    xmlStream.leafNode('author', null, 'Author');\n    xmlStream.closeNode(); // comments\n\n    xmlStream.openNode('commentList');\n    model.comments.forEach(comment => {\n      this.map.comment.render(xmlStream, comment);\n    });\n    xmlStream.closeNode();\n    xmlStream.closeNode();\n  },\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case 'commentList':\n        this.model = {\n          comments: []\n        };\n        return true;\n\n      case 'comment':\n        this.parser = this.map.comment;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  },\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n\n  parseClose(name) {\n    switch (name) {\n      case 'commentList':\n        return false;\n\n      case 'comment':\n        this.model.comments.push(this.parser.model);\n        this.parser = undefined;\n        return true;\n\n      default:\n        if (this.parser) {\n          this.parser.parseClose(name);\n        }\n\n        return true;\n    }\n  }\n\n});","map":null,"metadata":{},"sourceType":"script"}