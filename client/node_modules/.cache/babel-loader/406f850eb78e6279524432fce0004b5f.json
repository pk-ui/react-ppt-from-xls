{"ast":null,"code":"const BaseXform = require('../base-xform');\n\nconst BlipXform = require('./blip-xform');\n\nclass BlipFillXform extends BaseXform {\n  constructor() {\n    super();\n    this.map = {\n      'a:blip': new BlipXform()\n    };\n  }\n\n  get tag() {\n    return 'xdr:blipFill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag);\n    this.map['a:blip'].render(xmlStream, model); // TODO: options for this + parsing\n\n    xmlStream.openNode('a:stretch');\n    xmlStream.leafNode('a:fillRect');\n    xmlStream.closeNode();\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.reset();\n        break;\n\n      default:\n        this.parser = this.map[node.name];\n\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n\n        break;\n    }\n\n    return true;\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n\n      return true;\n    }\n\n    switch (name) {\n      case this.tag:\n        this.model = this.map['a:blip'].model;\n        return false;\n\n      default:\n        return true;\n    }\n  }\n\n}\n\nmodule.exports = BlipFillXform;","map":null,"metadata":{},"sourceType":"script"}