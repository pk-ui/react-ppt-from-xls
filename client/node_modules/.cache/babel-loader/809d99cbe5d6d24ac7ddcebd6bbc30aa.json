{"ast":null,"code":"'use strict';\n\nconst preserveCamelCase = input => {\n  let isLastCharLower = false;\n  let isLastCharUpper = false;\n  let isLastLastCharUpper = false;\n\n  for (let i = 0; i < input.length; i++) {\n    const c = input[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(c) && c.toUpperCase() === c) {\n      input = input.slice(0, i) + '-' + input.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(c) && c.toLowerCase() === c) {\n      input = input.slice(0, i - 1) + '-' + input.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = c.toLowerCase() === c;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = c.toUpperCase() === c;\n    }\n  }\n\n  return input;\n};\n\nmodule.exports = (input, options) => {\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  const postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n  if (Array.isArray(input)) {\n    input = input.map(x => x.trim()).filter(x => x.length).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  if (/^[a-z\\d]+$/.test(input)) {\n    return postProcess(input);\n  }\n\n  const hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, (m, p1) => p1.toUpperCase());\n  return postProcess(input);\n};","map":null,"metadata":{},"sourceType":"script"}