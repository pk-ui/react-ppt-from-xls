{"ast":null,"code":"const BaseXform = require('../base-xform');\n\nconst ColorXform = require('../style/color-xform');\n\nconst PageSetupPropertiesXform = require('./page-setup-properties-xform');\n\nconst OutlinePropertiesXform = require('./outline-properties-xform');\n\nclass SheetPropertiesXform extends BaseXform {\n  constructor() {\n    super();\n    this.map = {\n      tabColor: new ColorXform('tabColor'),\n      pageSetUpPr: new PageSetupPropertiesXform(),\n      outlinePr: new OutlinePropertiesXform()\n    };\n  }\n\n  get tag() {\n    return 'sheetPr';\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      xmlStream.addRollback();\n      xmlStream.openNode('sheetPr');\n      let inner = false;\n      inner = this.map.tabColor.render(xmlStream, model.tabColor) || inner;\n      inner = this.map.pageSetUpPr.render(xmlStream, model.pageSetup) || inner;\n      inner = this.map.outlinePr.render(xmlStream, model.outlineProperties) || inner;\n\n      if (inner) {\n        xmlStream.closeNode();\n        xmlStream.commit();\n      } else {\n        xmlStream.rollback();\n      }\n    }\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    if (node.name === this.tag) {\n      this.reset();\n      return true;\n    }\n\n    if (this.map[node.name]) {\n      this.parser = this.map[node.name];\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n\n      return true;\n    }\n\n    if (this.map.tabColor.model || this.map.pageSetUpPr.model || this.map.outlinePr.model) {\n      this.model = {};\n\n      if (this.map.tabColor.model) {\n        this.model.tabColor = this.map.tabColor.model;\n      }\n\n      if (this.map.pageSetUpPr.model) {\n        this.model.pageSetup = this.map.pageSetUpPr.model;\n      }\n\n      if (this.map.outlinePr.model) {\n        this.model.outlineProperties = this.map.outlinePr.model;\n      }\n    } else {\n      this.model = null;\n    }\n\n    return false;\n  }\n\n}\n\nmodule.exports = SheetPropertiesXform;","map":null,"metadata":{},"sourceType":"script"}