{"ast":null,"code":"var fs = require(\"fs\"),\n    extended = require(\"../extended\"),\n    escape = extended.escape,\n    stream = require(\"stream\"),\n    LINE_BREAK = extended.LINE_BREAK,\n    CsvTransformStream = require(\"./formatter_stream\");\n\nfunction createWriteStream(options) {\n  return new CsvTransformStream(options);\n}\n\nfunction write(arr, options, ws) {\n  var csvStream = createWriteStream(options),\n      i = -1,\n      l = arr.length;\n  extended.asyncEach(arr, function (item, cb) {\n    csvStream.write(item, null, cb);\n  }, function (err) {\n    if (err) {\n      csvStream.emit(\"error\", err);\n    } else {\n      csvStream.end();\n    }\n  });\n  return csvStream;\n}\n\nfunction writeToStream(ws, arr, options) {\n  return write(arr, options).pipe(ws);\n}\n\nfunction writeToString(arr, options, cb) {\n  if (extended.isFunction(options)) {\n    cb = options;\n    options = {};\n  }\n\n  var ws = new stream.Writable(),\n      written = [];\n\n  ws._write = function (data, enc, cb) {\n    written.push(data + \"\");\n    cb();\n  };\n\n  ws.on(\"error\", cb).on(\"finish\", function () {\n    cb(null, written.join(\"\"));\n  });\n  write(arr, options).pipe(ws);\n}\n\nfunction writeToBuffer(arr, options, cb) {\n  if (extended.isFunction(options)) {\n    cb = options;\n    options = {};\n  }\n\n  var ws = new stream.Writable(),\n      buffers = [],\n      l = 0;\n\n  ws._write = function (data, enc, cb) {\n    buffers.push(data);\n    l++;\n    cb();\n  };\n\n  ws.on(\"error\", cb).on(\"finish\", function () {\n    cb(null, Buffer.concat(buffers));\n  });\n  write(arr, options).pipe(ws);\n}\n\nfunction writeToPath(path, arr, options) {\n  var stream = fs.createWriteStream(path, {\n    encoding: \"utf8\"\n  });\n  return write(arr, options).pipe(stream);\n}\n\ncreateWriteStream.writeToBuffer = writeToBuffer;\ncreateWriteStream.write = write;\ncreateWriteStream.createWriteStream = createWriteStream;\ncreateWriteStream.writeToString = writeToString;\ncreateWriteStream.writeToPath = writeToPath;\ncreateWriteStream.writeToStream = writeToStream;\nmodule.exports = createWriteStream;","map":null,"metadata":{},"sourceType":"script"}