{"ast":null,"code":"const BaseXform = require('../base-xform');\n\nconst IntegerXform = require('../simple/integer-xform');\n\nclass CellPositionXform extends BaseXform {\n  constructor(options) {\n    super();\n    this.tag = options.tag;\n    this.map = {\n      'xdr:col': new IntegerXform({\n        tag: 'xdr:col',\n        zero: true\n      }),\n      'xdr:colOff': new IntegerXform({\n        tag: 'xdr:colOff',\n        zero: true\n      }),\n      'xdr:row': new IntegerXform({\n        tag: 'xdr:row',\n        zero: true\n      }),\n      'xdr:rowOff': new IntegerXform({\n        tag: 'xdr:rowOff',\n        zero: true\n      })\n    };\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag);\n    this.map['xdr:col'].render(xmlStream, model.nativeCol);\n    this.map['xdr:colOff'].render(xmlStream, model.nativeColOff);\n    this.map['xdr:row'].render(xmlStream, model.nativeRow);\n    this.map['xdr:rowOff'].render(xmlStream, model.nativeRowOff);\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.reset();\n        break;\n\n      default:\n        this.parser = this.map[node.name];\n\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n\n        break;\n    }\n\n    return true;\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n\n      return true;\n    }\n\n    switch (name) {\n      case this.tag:\n        this.model = {\n          nativeCol: this.map['xdr:col'].model,\n          nativeColOff: this.map['xdr:colOff'].model,\n          nativeRow: this.map['xdr:row'].model,\n          nativeRowOff: this.map['xdr:rowOff'].model\n        };\n        return false;\n\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n\n}\n\nmodule.exports = CellPositionXform;","map":null,"metadata":{},"sourceType":"script"}