{"ast":null,"code":"const colCache = require('../../../utils/col-cache');\n\nconst BaseXform = require('../base-xform');\n\nclass AutoFilterXform extends BaseXform {\n  get tag() {\n    return 'autoFilter';\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      if (typeof model === 'string') {\n        // assume range\n        xmlStream.leafNode('autoFilter', {\n          ref: model\n        });\n      } else {\n        const getAddress = function (addr) {\n          if (typeof addr === 'string') {\n            return addr;\n          }\n\n          return colCache.getAddress(addr.row, addr.column).address;\n        };\n\n        const firstAddress = getAddress(model.from);\n        const secondAddress = getAddress(model.to);\n\n        if (firstAddress && secondAddress) {\n          xmlStream.leafNode('autoFilter', {\n            ref: \"\".concat(firstAddress, \":\").concat(secondAddress)\n          });\n        }\n      }\n    }\n  }\n\n  parseOpen(node) {\n    if (node.name === 'autoFilter') {\n      this.model = node.attributes.ref;\n    }\n  }\n\n}\n\nmodule.exports = AutoFilterXform;","map":null,"metadata":{},"sourceType":"script"}