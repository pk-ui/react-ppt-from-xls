{"ast":null,"code":"var _jsxFileName = \"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js\";\nimport ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants';\nimport React, { Component } from 'react';\n\nclass DataComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sheetLoaded: false\n    };\n  }\n\n  render() {\n    return React.createElement(ReactGoogleSheets, {\n      clientId: Constants.CLIENT_ID,\n      apiKey: Constants.API_KEY,\n      spreadsheetId: Constants.SPREADSHEET_ID,\n      afterLoading: () => this.setState({\n        sheetLoaded: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.state.sheetLoaded ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, console.log('Your sheet data : ', this.props.getSheetsData(\"MTPL Players\")), React.createElement(\"button\", {\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Previous\"), React.createElement(\"button\", {\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Next\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.updateCell('MTPL Players', // sheetName\n        'G', // column\n        2, // row\n        'Sholay - 11', // value\n        null, // successCallback\n        error => {\n          console.log('error', error);\n        } // errorCallback\n        );\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"update cell!\")) : 'loading...');\n  }\n\n}\n\nexport default ReactGoogleSheets.connect(DataComponent);","map":{"version":3,"sources":["/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js"],"names":["ReactGoogleSheets","Constants","React","Component","DataComponent","constructor","props","state","sheetLoaded","render","CLIENT_ID","API_KEY","SPREADSHEET_ID","setState","console","log","getSheetsData","updateCell","error","connect"],"mappings":";AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,iBAAD;AACE,MAAA,QAAQ,EAAER,SAAS,CAACS,SADtB;AAEE,MAAA,MAAM,EAAET,SAAS,CAACU,OAFpB;AAGE,MAAA,aAAa,EAAEV,SAAS,CAACW,cAH3B;AAIE,MAAA,YAAY,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACL,QAAAA,WAAW,EAAE;AAAd,OAAd,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKD,KAAL,CAAWC,WAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGM,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKT,KAAL,CAAWU,aAAX,CAAyB,cAAzB,CAAlC,CAFH,EAIE;AAAQ,MAAA,OAAO,EAAE,MAAM,CAEtB,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EASE;AAAQ,MAAA,OAAO,EAAE,MAAM,CAEtB,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAcE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrB,aAAKV,KAAL,CAAWW,UAAX,CACE,cADF,EACkB;AAChB,WAFF,EAEO;AACL,SAHF,EAGK;AACH,qBAJF,EAIiB;AACf,YALF,EAKQ;AACLC,QAAAA,KAAD,IAAW;AACTJ,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB;AACD,SARH,CAQI;AARJ;AAUD,OAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdF,CADD,GA6BC,YAnCJ,CADF;AAwCD;;AAhDmC;;AAmDtC,eAAelB,iBAAiB,CAACmB,OAAlB,CAA0Bf,aAA1B,CAAf","sourcesContent":["import ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants'\nimport React, { Component } from 'react';\n\nclass DataComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sheetLoaded: false,\n    }\n  }\n  render() {\n    return (\n      <ReactGoogleSheets \n        clientId={Constants.CLIENT_ID}\n        apiKey={Constants.API_KEY}\n        spreadsheetId={Constants.SPREADSHEET_ID}\n        afterLoading={() => this.setState({sheetLoaded: true})}\n      >\n        {this.state.sheetLoaded ? \n          <div>\n            {/* Access Data */}\n            {console.log('Your sheet data : ', this.props.getSheetsData(\"MTPL Players\"))}\n            {/* Previous Player Info*/}\n            <button onClick={() => {\n             \n            }}>Previous</button>\n\n            {/* Next Player Info*/}\n            <button onClick={() => {\n          \n            }}>Next</button>\n\n            {/* Update Data */}\n            <button onClick={() => {\n              this.props.updateCell(\n                'MTPL Players', // sheetName\n                'G', // column\n                2, // row\n                'Sholay - 11', // value\n                null, // successCallback\n                (error) => {\n                  console.log('error', error)\n                } // errorCallback\n              );\n            }}>update cell!</button>\n          </div>\n          :\n          'loading...'\n        }\n      </ReactGoogleSheets>\n    )\n  }\n}\n \nexport default ReactGoogleSheets.connect(DataComponent);\n "]},"metadata":{},"sourceType":"module"}