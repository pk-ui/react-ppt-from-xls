{"ast":null,"code":"var _jsxFileName = \"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js\";\nimport ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Player from './Player.js';\nimport Select from 'react-select';\n\nclass DataComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(\"Option selected:\", selectedOption);\n    };\n\n    this.state = {\n      sheetLoaded: false,\n      auctionWebData: {},\n      currentPlayerId: '',\n      nextPlayerId: '',\n      prevPlayerId: '',\n      selectedOption: []\n    };\n  }\n\n  render() {\n    const selectedOption = this.state.selectedOption;\n\n    const populatePlayerInfo = players => {\n      let returnData = [];\n      let playersData = players.data;\n\n      for (let i = 0; i < playersData.length; i++) {\n        let playerProfile = {};\n        playerProfile.playerId = playersData[i][0];\n        playerProfile.name = playersData[i][1];\n        playerProfile.emailId = playersData[i][2];\n        playerProfile.mobileNo = playersData[i][3];\n        playerProfile.perTeamPlayerCount = playersData[i][4];\n        playerProfile.mtbcTeamName = playersData[i][5];\n        playerProfile.mtplTeamName = playersData[i][6];\n        playerProfile.basePrice = playersData[i][7];\n        playerProfile.purchasePrice = playersData[i][8];\n        playerProfile.status = playersData[i][9];\n        playerProfile.isExternalPlayer = playersData[i][10];\n        playerProfile.isRetainedPlayer = playersData[i][11];\n        playerProfile.isOwnerPlayer = playersData[i][12];\n        playerProfile.overallRank = playersData[i][13];\n        playerProfile.id = playersData[i][13];\n        playerProfile.batRank = playersData[i][14];\n        playerProfile.bowlRank = playersData[i][15];\n        playerProfile.matches = playersData[i][16];\n        playerProfile.runs = playersData[i][17];\n        playerProfile.ballsFaced = playersData[i][18];\n        playerProfile.batSR = playersData[i][19];\n        playerProfile.wickets = playersData[i][20];\n        playerProfile.economy = playersData[i][21];\n        playerProfile.bowlOvers = playersData[i][22];\n        playerProfile.batAverage = playersData[i][23];\n        playerProfile.highestScore = playersData[i][24];\n        playerProfile.bestBowl = playersData[i][25];\n        playerProfile.hatTrick = playersData[i][26];\n        playerProfile.catches = playersData[i][27];\n        playerProfile.totalPoints = playersData[i][28];\n        playerProfile.batPoints = playersData[i][29];\n        playerProfile.bowlPoints = playersData[i][30];\n        playerProfile.fieldPoints = playersData[i][31];\n        returnData.push(playerProfile);\n      }\n\n      return returnData;\n    };\n\n    const populateTeams = mtplTeams => {\n      let returnData = [];\n      let teams = mtplTeams.data;\n\n      for (let i = 3; i < teams.length; i++) {\n        let teamInfo = {};\n        teamInfo.name = teams[i][0];\n        teamInfo.ownerName = teams[i][1];\n        teamInfo.isOwnerPlayer = teams[i][2];\n        teamInfo.amount = teams[i][3];\n        teamInfo.amountSpent = teams[i][4];\n        teamInfo.amountBalance = teams[i][5];\n        teamInfo.playerCount = teams[i][6];\n        teamInfo.remainingPlayerCount = teams[i][7];\n        teamInfo.maxAllowedBidOnNextPlayer = teams[i][8];\n        teamInfo.ownerPlayerId = teams[i][9];\n        teamInfo.retainedPlayerId = teams[i][10];\n        returnData.push(teamInfo);\n      }\n\n      return returnData;\n    };\n\n    const teamOptions = mtplTeams => {\n      let returnData = [];\n      let teams = mtplTeams.data;\n\n      for (let i = 3; i < teams.length; i++) {\n        let teamInfo = {};\n        teamInfo.value = teams[i][0];\n        teamInfo.label = teams[i][0];\n        returnData.push(teamInfo);\n      }\n\n      return returnData;\n    };\n\n    const getAuctionData = xcelData => {\n      let auctionData = {};\n\n      for (let i = 0; i < xcelData.length; i++) {\n        switch (xcelData[i].name) {\n          case 'MTPL Players':\n            auctionData.mtplPlayers = xcelData[i];\n            break;\n\n          case 'MTPL Teams':\n            auctionData.mtplTeams = xcelData[i];\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return auctionData;\n    };\n\n    const retrieveAuctionData = () => {\n      let xcelData = this.props.getSheetsData();\n      console.log(\"No of Sheets : \", xcelData.length);\n      let auctionWebData = getAuctionData(xcelData);\n      console.log('MTPL Players : ', auctionWebData.mtplPlayers);\n      console.log('MTPL Teams : ', auctionWebData.mtplTeams);\n      let returnData = {};\n      returnData.players = populatePlayerInfo(auctionWebData.mtplPlayers);\n      returnData.teams = populateTeams(auctionWebData.mtplTeams);\n      console.log(\"MTPL Players : \", returnData.players);\n      console.log(\"MTPL Teams : \", returnData.teams);\n      return returnData;\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(ReactGoogleSheets, {\n      clientId: Constants.CLIENT_ID,\n      apiKey: Constants.API_KEY,\n      spreadsheetId: Constants.MTPL_MENS_SPREADSHEET_ID,\n      afterLoading: () => this.setState({\n        sheetLoaded: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.sheetLoaded ? retrieveAuctionData().players.map((item, key) =>\n    /*  <Player item={item} id={key} key={key} /> */\n    React.createElement(\"div\", {\n      key: key,\n      className: \"AuctionBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Previous\"), React.createElement(\"button\", {\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Next\")), item.isExternalPlayer === 'TRUE' ? React.createElement(\"div\", {\n      className: \"externalPlayer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" Associated with Other MN Cricket League(s) \") : '', React.createElement(\"div\", {\n      className: \"basePrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Base Price : \", item.basePrice)), React.createElement(\"div\", {\n      className: \"playerName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, item.name)), React.createElement(\"div\", {\n      className: \"playerInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Rank: \", item.overallRank), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"MTBC Team: \", item.mtbcTeamName)), React.createElement(\"div\", {\n      className: \"holdMTPLSpace\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"mtplPlayerInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, item.mtplTeamName ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"MTPL Team: \", item.mtplTeamName, \" \") : React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"MTPL Team:\"), React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: teamOptions && teamOptions.constructor === Array ? teamOptions : [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Price:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"holdEmptySpace\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Matches\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Rank\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Runs\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"S/R\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"HS\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Ave\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"(C)\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Rank\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"(W)\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"(O)\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Econ\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"BB\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"H/T\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, item.matches), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, item.batRank), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, item.runs), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, item.batSR), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, item.highestScore), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, item.batAverage), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, item.catches), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, item.bowlRank), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, item.wickets), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, item.bowlOvers), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, item.economy), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, item.bestBowl), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, item.hatTrick)))), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.updateCell('MTPL Players', // sheetName\n        'G', // column\n        4, // row\n        'Sholay - 11', // value\n        null, // successCallback\n        error => {\n          console.log('error', error);\n        } // errorCallback\n        );\n        this.props.updateCell('MTPL Players', // sheetName\n        'I', // column\n        4, // row\n        '50000', // value\n        null, // successCallback\n        error => {\n          console.log('error', error);\n        } // errorCallback\n        );\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"update cell!\"))) : 'loading...'));\n  }\n\n}\n\nexport default ReactGoogleSheets.connect(DataComponent);","map":{"version":3,"sources":["/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js"],"names":["ReactGoogleSheets","Constants","React","Component","Player","Select","DataComponent","constructor","props","handleChange","selectedOption","setState","console","log","state","sheetLoaded","auctionWebData","currentPlayerId","nextPlayerId","prevPlayerId","render","populatePlayerInfo","players","returnData","playersData","data","i","length","playerProfile","playerId","name","emailId","mobileNo","perTeamPlayerCount","mtbcTeamName","mtplTeamName","basePrice","purchasePrice","status","isExternalPlayer","isRetainedPlayer","isOwnerPlayer","overallRank","id","batRank","bowlRank","matches","runs","ballsFaced","batSR","wickets","economy","bowlOvers","batAverage","highestScore","bestBowl","hatTrick","catches","totalPoints","batPoints","bowlPoints","fieldPoints","push","populateTeams","mtplTeams","teams","teamInfo","ownerName","amount","amountSpent","amountBalance","playerCount","remainingPlayerCount","maxAllowedBidOnNextPlayer","ownerPlayerId","retainedPlayerId","teamOptions","value","label","getAuctionData","xcelData","auctionData","mtplPlayers","retrieveAuctionData","getSheetsData","CLIENT_ID","API_KEY","MTPL_MENS_SPREADSHEET_ID","map","item","key","handleSubmit","Array","updateCell","error","connect"],"mappings":"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","sourcesContent":["import ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants'\nimport React, { Component } from 'react';\nimport './App.css';\nimport Player from './Player.js'\nimport Select from 'react-select';\n\nclass DataComponent extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      sheetLoaded: false,\n      auctionWebData: {},\n      currentPlayerId: '',\n      nextPlayerId: '',\n      prevPlayerId: '',\n      selectedOption: []\n\n    }\n  }\n  \n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  };\n\n  render() {\n\n    const { selectedOption } = this.state;\n\n    const populatePlayerInfo = (players) => {\n      let returnData = [];\n      let playersData = players.data;\n      for (let i = 0; i < playersData.length; i++) {\n        let playerProfile = {};\n        playerProfile.playerId = playersData[i][0];\n        playerProfile.name = playersData[i][1];\n        playerProfile.emailId = playersData[i][2];\n        playerProfile.mobileNo = playersData[i][3];\n        playerProfile.perTeamPlayerCount = playersData[i][4];\n        playerProfile.mtbcTeamName = playersData[i][5];\n        playerProfile.mtplTeamName = playersData[i][6];\n        playerProfile.basePrice = playersData[i][7];\n        playerProfile.purchasePrice = playersData[i][8];\n        playerProfile.status = playersData[i][9];\n        playerProfile.isExternalPlayer = playersData[i][10];\n        playerProfile.isRetainedPlayer = playersData[i][11];\n        playerProfile.isOwnerPlayer = playersData[i][12];\n        playerProfile.overallRank = playersData[i][13];\n        playerProfile.id = playersData[i][13];\n        playerProfile.batRank = playersData[i][14];\n        playerProfile.bowlRank = playersData[i][15];\n        playerProfile.matches = playersData[i][16];\n        playerProfile.runs = playersData[i][17];\n        playerProfile.ballsFaced = playersData[i][18];\n        playerProfile.batSR = playersData[i][19];\n        playerProfile.wickets = playersData[i][20];\n        playerProfile.economy = playersData[i][21];\n        playerProfile.bowlOvers = playersData[i][22];\n        playerProfile.batAverage = playersData[i][23];\n        playerProfile.highestScore = playersData[i][24];\n        playerProfile.bestBowl = playersData[i][25];\n        playerProfile.hatTrick = playersData[i][26];\n        playerProfile.catches = playersData[i][27];\n        playerProfile.totalPoints = playersData[i][28];\n        playerProfile.batPoints = playersData[i][29];\n        playerProfile.bowlPoints = playersData[i][30];\n        playerProfile.fieldPoints = playersData[i][31];\n\n        returnData.push(playerProfile);\n      }\n      return returnData;\n    }\n\n    const populateTeams = (mtplTeams) => {\n      let returnData = [];\n      let teams = mtplTeams.data;\n      for (let i = 3; i < teams.length; i++) {\n        let teamInfo = {};\n        teamInfo.name = teams[i][0];\n        teamInfo.ownerName = teams[i][1];\n        teamInfo.isOwnerPlayer = teams[i][2];\n        teamInfo.amount = teams[i][3];\n        teamInfo.amountSpent = teams[i][4];\n        teamInfo.amountBalance = teams[i][5];\n        teamInfo.playerCount = teams[i][6];\n        teamInfo.remainingPlayerCount = teams[i][7];\n        teamInfo.maxAllowedBidOnNextPlayer = teams[i][8];\n        teamInfo.ownerPlayerId = teams[i][9];\n        teamInfo.retainedPlayerId = teams[i][10];\n        returnData.push(teamInfo);\n      }\n      return returnData;\n    }\n    \n    const teamOptions = (mtplTeams) => {\n      let returnData = [];\n      let teams = mtplTeams.data;\n      for (let i = 3; i < teams.length; i++) {\n        let teamInfo = {};\n        teamInfo.value = teams[i][0];\n        teamInfo.label = teams[i][0];\n        returnData.push(teamInfo);\n      }\n      return returnData;\n    }\n\n    const getAuctionData = (xcelData) => {\n      let auctionData = {};\n      for (let i = 0; i < xcelData.length; i++) {\n        switch (xcelData[i].name) {\n          case 'MTPL Players':\n            auctionData.mtplPlayers = xcelData[i];\n            break;\n          case 'MTPL Teams':\n            auctionData.mtplTeams = xcelData[i];\n            break;\n          default:\n            break;\n        }\n      }\n      return auctionData;\n    }\n\n    const retrieveAuctionData = () => {\n      let xcelData = this.props.getSheetsData();\n      console.log(\"No of Sheets : \", xcelData.length);\n      let auctionWebData = getAuctionData(xcelData);\n      console.log('MTPL Players : ', auctionWebData.mtplPlayers);\n      console.log('MTPL Teams : ', auctionWebData.mtplTeams);\n\n      let returnData = {};\n      returnData.players = populatePlayerInfo(auctionWebData.mtplPlayers);\n      returnData.teams = populateTeams(auctionWebData.mtplTeams);\n      \n      console.log(\"MTPL Players : \", returnData.players);\n      console.log(\"MTPL Teams : \", returnData.teams);\n      return returnData;\n    }\n\n    return (\n      <div>\n        <ReactGoogleSheets\n          clientId={Constants.CLIENT_ID}\n          apiKey={Constants.API_KEY}\n          spreadsheetId={Constants.MTPL_MENS_SPREADSHEET_ID}\n          afterLoading={() => this.setState({ sheetLoaded: true })}\n        >\n          {this.state.sheetLoaded ? retrieveAuctionData().players.map((item, key) =>\n\n\n            /*  <Player item={item} id={key} key={key} /> */\n            <div key={key} className=\"AuctionBody\">\n\n\n\n              <div>\n                <button onClick={() => { }}>Previous</button>\n\n                <button onClick={() => { }}>Next</button>\n              </div>\n\n              {item.isExternalPlayer === 'TRUE' ? <div className=\"externalPlayer\"> Associated with Other MN Cricket League(s) </div> : ''}\n\n              <div className=\"basePrice\">\n                <span>Base Price : {item.basePrice}</span>\n              </div>\n              <div className=\"playerName\">\n                <span>{item.name}</span>\n              </div>\n              <div className=\"playerInfo\">\n                <span>Rank: {item.overallRank}</span>\n                <span>MTBC Team: {item.mtbcTeamName}</span>\n\n              </div>\n              <div className=\"holdMTPLSpace\" />\n              <div className=\"mtplPlayerInfo\">\n                \n                {item.mtplTeamName ?\n\n                  <span>MTPL Team: {item.mtplTeamName} </span> :\n\n                  <form onSubmit={this.handleSubmit}>\n                    <label>\n                      MTPL Team:\n                    </label>\n                        <Select\n                      value={selectedOption}\n                      onChange={this.handleChange}\n                      options={teamOptions && teamOptions.constructor === Array ? teamOptions : []}\n                    />\n                    <label>\n                      Price:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                  </form>\n                }\n              </div>\n              <div className=\"holdEmptySpace\" />\n              <div className=\"table\">\n                <table>\n                <thead>\n                    <th>\n                    <td className=\"td\">\n                      Matches\n                    </td>\n                    <td className=\"td\">\n                      &nbsp;\n                    </td>\n                    <td className=\"td\">\n                      Rank\n                    </td>\n                    <td className=\"td\">\n                      Runs\n                    </td>\n                    <td className=\"td\">\n                      S/R\n                    </td>\n                    <td className=\"td\">\n                      HS\n                    </td>\n                    <td className=\"td\">\n                      Ave\n                    </td>\n                    <td className=\"td\">\n                      (C)\n                    </td>\n                    <td className=\"td\">\n                      &nbsp;\n                    </td>\n                    <td className=\"td\">\n                      Rank\n                    </td>\n                    <td className=\"td\">\n                      (W)\n                    </td>\n                    <td className=\"td\">\n                      (O)\n                    </td>\n                    <td className=\"td\">\n                      Econ\n                    </td>\n                    <td className=\"td\">\n                      BB\n                    </td>\n                    <td className=\"td\">\n                      H/T\n                    </td>\n                    </th>\n                  </thead>\n                  <tr>\n                    <td className=\"td\">\n                      {item.matches}\n                    </td>\n                    <td className=\"td\">\n                      &nbsp;\n                    </td>\n                    <td className=\"td\">\n                      {item.batRank}\n                    </td>\n                    <td className=\"td\">\n                      {item.runs}\n                    </td>\n                    <td className=\"td\">\n                      {item.batSR}\n                    </td>\n                    <td className=\"td\">\n                      {item.highestScore}\n                    </td>\n                    <td className=\"td\">\n                      {item.batAverage}\n                    </td>\n                    <td className=\"td\">\n                      {item.catches}\n                    </td>\n                    <td className=\"td\">\n                      &nbsp;\n                    </td>\n                    <td className=\"td\">\n                      {item.bowlRank}\n                    </td>\n                    <td className=\"td\">\n                      {item.wickets}\n                    </td>\n                    <td className=\"td\">\n                      {item.bowlOvers}\n                    </td>\n                    <td className=\"td\">\n                      {item.economy}\n                    </td>\n                    <td className=\"td\">\n                      {item.bestBowl}\n                    </td>\n                    <td className=\"td\">\n                      {item.hatTrick}\n                    </td>\n                  </tr>\n\n                </table>\n              </div>\n\n\n              {/* Update Data */}\n              <button onClick={() => {\n                this.props.updateCell(\n                  'MTPL Players', // sheetName\n                  'G', // column\n                  4, // row\n                  'Sholay - 11', // value\n                  null, // successCallback\n                  (error) => {\n                    console.log('error', error)\n                  } // errorCallback\n                );\n                this.props.updateCell(\n                  'MTPL Players', // sheetName\n                  'I', // column\n                  4, // row\n                  '50000', // value\n                  null, // successCallback\n                  (error) => {\n                    console.log('error', error)\n                  } // errorCallback\n                );\n              }}>update cell!</button>\n            </div>\n\n          ) : 'loading...'}\n        </ReactGoogleSheets>\n      </div>\n    )\n  }\n}\n\nexport default ReactGoogleSheets.connect(DataComponent);\n"]},"metadata":{},"sourceType":"module"}