{"ast":null,"code":"const XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\n\nconst DateXform = require('../simple/date-xform');\n\nconst StringXform = require('../simple/string-xform');\n\nconst IntegerXform = require('../simple/integer-xform');\n\nclass CoreXform extends BaseXform {\n  constructor() {\n    super();\n    this.map = {\n      'dc:creator': new StringXform({\n        tag: 'dc:creator'\n      }),\n      'dc:title': new StringXform({\n        tag: 'dc:title'\n      }),\n      'dc:subject': new StringXform({\n        tag: 'dc:subject'\n      }),\n      'dc:description': new StringXform({\n        tag: 'dc:description'\n      }),\n      'dc:identifier': new StringXform({\n        tag: 'dc:identifier'\n      }),\n      'dc:language': new StringXform({\n        tag: 'dc:language'\n      }),\n      'cp:keywords': new StringXform({\n        tag: 'cp:keywords'\n      }),\n      'cp:category': new StringXform({\n        tag: 'cp:category'\n      }),\n      'cp:lastModifiedBy': new StringXform({\n        tag: 'cp:lastModifiedBy'\n      }),\n      'cp:lastPrinted': new DateXform({\n        tag: 'cp:lastPrinted',\n        format: CoreXform.DateFormat\n      }),\n      'cp:revision': new IntegerXform({\n        tag: 'cp:revision'\n      }),\n      'cp:version': new StringXform({\n        tag: 'cp:version'\n      }),\n      'cp:contentStatus': new StringXform({\n        tag: 'cp:contentStatus'\n      }),\n      'cp:contentType': new StringXform({\n        tag: 'cp:contentType'\n      }),\n      'dcterms:created': new DateXform({\n        tag: 'dcterms:created',\n        attrs: CoreXform.DateAttrs,\n        format: CoreXform.DateFormat\n      }),\n      'dcterms:modified': new DateXform({\n        tag: 'dcterms:modified',\n        attrs: CoreXform.DateAttrs,\n        format: CoreXform.DateFormat\n      })\n    };\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode('cp:coreProperties', CoreXform.CORE_PROPERTY_ATTRIBUTES);\n    this.map['dc:creator'].render(xmlStream, model.creator);\n    this.map['dc:title'].render(xmlStream, model.title);\n    this.map['dc:subject'].render(xmlStream, model.subject);\n    this.map['dc:description'].render(xmlStream, model.description);\n    this.map['dc:identifier'].render(xmlStream, model.identifier);\n    this.map['dc:language'].render(xmlStream, model.language);\n    this.map['cp:keywords'].render(xmlStream, model.keywords);\n    this.map['cp:category'].render(xmlStream, model.category);\n    this.map['cp:lastModifiedBy'].render(xmlStream, model.lastModifiedBy);\n    this.map['cp:lastPrinted'].render(xmlStream, model.lastPrinted);\n    this.map['cp:revision'].render(xmlStream, model.revision);\n    this.map['cp:version'].render(xmlStream, model.version);\n    this.map['cp:contentStatus'].render(xmlStream, model.contentStatus);\n    this.map['cp:contentType'].render(xmlStream, model.contentType);\n    this.map['dcterms:created'].render(xmlStream, model.created);\n    this.map['dcterms:modified'].render(xmlStream, model.modified);\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case 'cp:coreProperties':\n      case 'coreProperties':\n        return true;\n\n      default:\n        this.parser = this.map[node.name];\n\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n\n        throw new Error(\"Unexpected xml node in parseOpen: \".concat(JSON.stringify(node)));\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n\n      return true;\n    }\n\n    switch (name) {\n      case 'cp:coreProperties':\n      case 'coreProperties':\n        this.model = {\n          creator: this.map['dc:creator'].model,\n          title: this.map['dc:title'].model,\n          subject: this.map['dc:subject'].model,\n          description: this.map['dc:description'].model,\n          identifier: this.map['dc:identifier'].model,\n          language: this.map['dc:language'].model,\n          keywords: this.map['cp:keywords'].model,\n          category: this.map['cp:category'].model,\n          lastModifiedBy: this.map['cp:lastModifiedBy'].model,\n          lastPrinted: this.map['cp:lastPrinted'].model,\n          revision: this.map['cp:revision'].model,\n          contentStatus: this.map['cp:contentStatus'].model,\n          contentType: this.map['cp:contentType'].model,\n          created: this.map['dcterms:created'].model,\n          modified: this.map['dcterms:modified'].model\n        };\n        return false;\n\n      default:\n        throw new Error(\"Unexpected xml node in parseClose: \".concat(name));\n    }\n  }\n\n}\n\nCoreXform.DateFormat = function (dt) {\n  return dt.toISOString().replace(/[.]\\d{3}/, '');\n};\n\nCoreXform.DateAttrs = {\n  'xsi:type': 'dcterms:W3CDTF'\n};\nCoreXform.CORE_PROPERTY_ATTRIBUTES = {\n  'xmlns:cp': 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n  'xmlns:dc': 'http://purl.org/dc/elements/1.1/',\n  'xmlns:dcterms': 'http://purl.org/dc/terms/',\n  'xmlns:dcmitype': 'http://purl.org/dc/dcmitype/',\n  'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n};\nmodule.exports = CoreXform;","map":null,"metadata":{},"sourceType":"script"}