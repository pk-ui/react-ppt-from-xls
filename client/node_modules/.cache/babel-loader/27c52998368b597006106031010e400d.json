{"ast":null,"code":"var _jsxFileName = \"/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js\";\nimport ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Player from './Player.js';\n\nclass DataComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sheetLoaded: false,\n      auctionWebData: {},\n      currentPlayerId: '',\n      nextPlayerId: '',\n      prevPlayerId: ''\n    };\n  }\n\n  render() {\n    const populatePlayerInfo = players => {\n      let returnData = [];\n      let playersData = players.data;\n\n      for (let i = 0; i < playersData.length; i++) {\n        let playerProfile = {};\n        playerProfile.playerId = playersData[i][0];\n        playerProfile.name = playersData[i][1];\n        playerProfile.emailId = playersData[i][2];\n        playerProfile.mobileNo = playersData[i][3];\n        playerProfile.perTeamPlayerCount = playersData[i][4];\n        playerProfile.mtbcTeamName = playersData[i][5];\n        playerProfile.mtplTeamName = playersData[i][6];\n        playerProfile.basePrice = playersData[i][7];\n        playerProfile.purchasePrice = playersData[i][8];\n        playerProfile.status = playersData[i][9];\n        playerProfile.isExternalPlayer = playersData[i][10];\n        playerProfile.isRetainedPlayer = playersData[i][11];\n        playerProfile.isOwnerPlayer = playersData[i][12];\n        playerProfile.overallRank = playersData[i][13];\n        playerProfile.id = playersData[i][13];\n        playerProfile.batRank = playersData[i][14];\n        playerProfile.bowlRank = playersData[i][15];\n        playerProfile.matches = playersData[i][16];\n        playerProfile.runs = playersData[i][17];\n        playerProfile.ballsFaced = playersData[i][18];\n        playerProfile.batSR = playersData[i][19];\n        playerProfile.wickets = playersData[i][20];\n        playerProfile.economy = playersData[i][21];\n        playerProfile.bowlOvers = playersData[i][22];\n        playerProfile.batAverage = playersData[i][23];\n        playerProfile.highestScore = playersData[i][24];\n        playerProfile.bestBowl = playersData[i][25];\n        playerProfile.hatTrick = playersData[i][26];\n        playerProfile.catches = playersData[i][27];\n        playerProfile.totalPoints = playersData[i][28];\n        playerProfile.batPoints = playersData[i][29];\n        playerProfile.bowlPoints = playersData[i][30];\n        playerProfile.fieldPoints = playersData[i][31];\n        returnData.push(playerProfile);\n      }\n\n      return returnData;\n    };\n\n    const populateTeams = mtplTeams => {\n      let returnData = [];\n      let teams = mtplTeams.data;\n\n      for (let i = 3; i < teams.length; i++) {\n        let teamInfo = {};\n        teamInfo.name = teams[i][0];\n        teamInfo.ownerName = teams[i][1];\n        teamInfo.isOwnerPlayer = teams[i][2];\n        teamInfo.amount = teams[i][3];\n        teamInfo.amountSpent = teams[i][4];\n        teamInfo.amountBalance = teams[i][5];\n        teamInfo.playerCount = teams[i][6];\n        teamInfo.remainingPlayerCount = teams[i][7];\n        teamInfo.maxAllowedBidOnNextPlayer = teams[i][8];\n        teamInfo.ownerPlayerId = teams[i][9];\n        teamInfo.retainedPlayerId = teams[i][10];\n        returnData.push(teamInfo);\n      }\n\n      return returnData;\n    };\n\n    const getAuctionData = xcelData => {\n      let auctionData = {};\n\n      for (let i = 0; i < xcelData.length; i++) {\n        switch (xcelData[i].name) {\n          case 'MTPL Players':\n            auctionData.mtplPlayers = xcelData[i];\n            break;\n\n          case 'MTPL Teams':\n            auctionData.mtplTeams = xcelData[i];\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return auctionData;\n    };\n\n    const retrieveAuctionData = () => {\n      let xcelData = this.props.getSheetsData();\n      console.log(\"No of Sheets : \", xcelData.length);\n      let auctionWebData = getAuctionData(xcelData);\n      console.log('MTPL Players : ', auctionWebData.mtplPlayers);\n      console.log('MTPL Teams : ', auctionWebData.mtplTeams);\n      let returnData = {};\n      returnData.players = populatePlayerInfo(auctionWebData.mtplPlayers);\n      returnData.teams = populateTeams(auctionWebData.mtplTeams);\n      console.log(\"MTPL Players : \", returnData.players);\n      console.log(\"MTPL Teams : \", returnData.teams);\n      return returnData;\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(ReactGoogleSheets, {\n      clientId: Constants.CLIENT_ID,\n      apiKey: Constants.API_KEY,\n      spreadsheetId: Constants.MTPL_MENS_SPREADSHEET_ID,\n      afterLoading: () => this.setState({\n        sheetLoaded: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.sheetLoaded ? retrieveAuctionData().players.map((item, key) =>\n    /*  <Player item={item} id={key} key={key} /> */\n    React.createElement(\"div\", {\n      key: key,\n      className: \"AuctionBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Previous\"), React.createElement(\"button\", {\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Next\")), item.isExternalPlayer === 'TRUE' ? React.createElement(\"div\", {\n      className: \"externalPlayer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" Associated with Other MN Cricket League(s) \") : '', React.createElement(\"div\", {\n      className: \"basePrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Base Price : \", item.basePrice)), React.createElement(\"div\", {\n      className: \"playerName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, item.name)), React.createElement(\"div\", {\n      className: \"playerInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Rank: \", item.overallRank), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"MTBC Team: \", item.mtbcTeamName), item.mtplTeamName ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"MTPL Team: \", item.mtplTeamName, \" \") : ''), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Matches\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Rank\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Runs\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"S/R\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"HS\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Ave\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"(C)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Rank\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"(W)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"(O)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Econ\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"BB\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"H/T\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, item.matches), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, item.batRank), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, item.runs), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, item.batSR), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, item.highestScore), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, item.batAverage), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, item.catches), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, item.bowlRank), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, item.wickets), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, item.bowlOvers), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, item.economy), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, item.bestBowl), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, item.hatTrick)))), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.updateCell('MTPL Players', // sheetName\n        'G', // column\n        4, // row\n        'Sholay - 11', // value\n        null, // successCallback\n        error => {\n          console.log('error', error);\n        } // errorCallback\n        );\n        this.props.updateCell('MTPL Players', // sheetName\n        'I', // column\n        4, // row\n        '50000', // value\n        null, // successCallback\n        error => {\n          console.log('error', error);\n        } // errorCallback\n        );\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"update cell!\"))) : 'loading...'));\n  }\n\n}\n\nexport default ReactGoogleSheets.connect(DataComponent);","map":{"version":3,"sources":["/Users/a1451224/Documents/PK/Personal/dev/react-ppt-from-xls/client/src/DataComponent.js"],"names":["ReactGoogleSheets","Constants","React","Component","Player","DataComponent","constructor","props","state","sheetLoaded","auctionWebData","currentPlayerId","nextPlayerId","prevPlayerId","render","populatePlayerInfo","players","returnData","playersData","data","i","length","playerProfile","playerId","name","emailId","mobileNo","perTeamPlayerCount","mtbcTeamName","mtplTeamName","basePrice","purchasePrice","status","isExternalPlayer","isRetainedPlayer","isOwnerPlayer","overallRank","id","batRank","bowlRank","matches","runs","ballsFaced","batSR","wickets","economy","bowlOvers","batAverage","highestScore","bestBowl","hatTrick","catches","totalPoints","batPoints","bowlPoints","fieldPoints","push","populateTeams","mtplTeams","teams","teamInfo","ownerName","amount","amountSpent","amountBalance","playerCount","remainingPlayerCount","maxAllowedBidOnNextPlayer","ownerPlayerId","retainedPlayerId","getAuctionData","xcelData","auctionData","mtplPlayers","retrieveAuctionData","getSheetsData","console","log","CLIENT_ID","API_KEY","MTPL_MENS_SPREADSHEET_ID","setState","map","item","key","updateCell","error","connect"],"mappings":";AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAEpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,eAAe,EAAE,EAHN;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,YAAY,EAAE;AALH,KAAb;AAQD;;AACDC,EAAAA,MAAM,GAAG;AAEP,UAAMC,kBAAkB,GAAIC,OAAD,IAAa;AACtC,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,WAAW,GAAGF,OAAO,CAACG,IAA1B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,YAAIE,aAAa,GAAG,EAApB;AACAA,QAAAA,aAAa,CAACC,QAAd,GAAyBL,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAAzB;AACAE,QAAAA,aAAa,CAACE,IAAd,GAAqBN,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAArB;AACAE,QAAAA,aAAa,CAACG,OAAd,GAAwBP,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAAxB;AACAE,QAAAA,aAAa,CAACI,QAAd,GAAyBR,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAAzB;AACAE,QAAAA,aAAa,CAACK,kBAAd,GAAmCT,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAAnC;AACAE,QAAAA,aAAa,CAACM,YAAd,GAA6BV,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAA7B;AACAE,QAAAA,aAAa,CAACO,YAAd,GAA6BX,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAA7B;AACAE,QAAAA,aAAa,CAACQ,SAAd,GAA0BZ,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAA1B;AACAE,QAAAA,aAAa,CAACS,aAAd,GAA8Bb,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAA9B;AACAE,QAAAA,aAAa,CAACU,MAAd,GAAuBd,WAAW,CAACE,CAAD,CAAX,CAAe,CAAf,CAAvB;AACAE,QAAAA,aAAa,CAACW,gBAAd,GAAiCf,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAjC;AACAE,QAAAA,aAAa,CAACY,gBAAd,GAAiChB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAjC;AACAE,QAAAA,aAAa,CAACa,aAAd,GAA8BjB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA9B;AACAE,QAAAA,aAAa,CAACc,WAAd,GAA4BlB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA5B;AACAE,QAAAA,aAAa,CAACe,EAAd,GAAmBnB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAnB;AACAE,QAAAA,aAAa,CAACgB,OAAd,GAAwBpB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAxB;AACAE,QAAAA,aAAa,CAACiB,QAAd,GAAyBrB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAzB;AACAE,QAAAA,aAAa,CAACkB,OAAd,GAAwBtB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAxB;AACAE,QAAAA,aAAa,CAACmB,IAAd,GAAqBvB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAArB;AACAE,QAAAA,aAAa,CAACoB,UAAd,GAA2BxB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA3B;AACAE,QAAAA,aAAa,CAACqB,KAAd,GAAsBzB,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAtB;AACAE,QAAAA,aAAa,CAACsB,OAAd,GAAwB1B,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAxB;AACAE,QAAAA,aAAa,CAACuB,OAAd,GAAwB3B,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAxB;AACAE,QAAAA,aAAa,CAACwB,SAAd,GAA0B5B,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA1B;AACAE,QAAAA,aAAa,CAACyB,UAAd,GAA2B7B,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA3B;AACAE,QAAAA,aAAa,CAAC0B,YAAd,GAA6B9B,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA7B;AACAE,QAAAA,aAAa,CAAC2B,QAAd,GAAyB/B,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAzB;AACAE,QAAAA,aAAa,CAAC4B,QAAd,GAAyBhC,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAzB;AACAE,QAAAA,aAAa,CAAC6B,OAAd,GAAwBjC,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAAxB;AACAE,QAAAA,aAAa,CAAC8B,WAAd,GAA4BlC,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA5B;AACAE,QAAAA,aAAa,CAAC+B,SAAd,GAA0BnC,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA1B;AACAE,QAAAA,aAAa,CAACgC,UAAd,GAA2BpC,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA3B;AACAE,QAAAA,aAAa,CAACiC,WAAd,GAA4BrC,WAAW,CAACE,CAAD,CAAX,CAAe,EAAf,CAA5B;AAEAH,QAAAA,UAAU,CAACuC,IAAX,CAAgBlC,aAAhB;AACD;;AACD,aAAOL,UAAP;AACD,KA1CD;;AA4CA,UAAMwC,aAAa,GAAIC,SAAD,IAAe;AACnC,UAAIzC,UAAU,GAAG,EAAjB;AACA,UAAI0C,KAAK,GAAGD,SAAS,CAACvC,IAAtB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuC,KAAK,CAACtC,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIwC,QAAQ,GAAG,EAAf;AACAA,QAAAA,QAAQ,CAACpC,IAAT,GAAgBmC,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAAhB;AACAwC,QAAAA,QAAQ,CAACC,SAAT,GAAqBF,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAArB;AACAwC,QAAAA,QAAQ,CAACzB,aAAT,GAAyBwB,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAAzB;AACAwC,QAAAA,QAAQ,CAACE,MAAT,GAAkBH,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAAlB;AACAwC,QAAAA,QAAQ,CAACG,WAAT,GAAuBJ,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAAvB;AACAwC,QAAAA,QAAQ,CAACI,aAAT,GAAyBL,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAAzB;AACAwC,QAAAA,QAAQ,CAACK,WAAT,GAAuBN,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAAvB;AACAwC,QAAAA,QAAQ,CAACM,oBAAT,GAAgCP,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAAhC;AACAwC,QAAAA,QAAQ,CAACO,yBAAT,GAAqCR,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAArC;AACAwC,QAAAA,QAAQ,CAACQ,aAAT,GAAyBT,KAAK,CAACvC,CAAD,CAAL,CAAS,CAAT,CAAzB;AACAwC,QAAAA,QAAQ,CAACS,gBAAT,GAA4BV,KAAK,CAACvC,CAAD,CAAL,CAAS,EAAT,CAA5B;AACAH,QAAAA,UAAU,CAACuC,IAAX,CAAgBI,QAAhB;AACD;;AACD,aAAO3C,UAAP;AACD,KAnBD;;AAqBA,UAAMqD,cAAc,GAAIC,QAAD,IAAc;AACnC,UAAIC,WAAW,GAAG,EAAlB;;AACA,WAAK,IAAIpD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmD,QAAQ,CAAClD,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,gBAAQmD,QAAQ,CAACnD,CAAD,CAAR,CAAYI,IAApB;AACE,eAAK,cAAL;AACEgD,YAAAA,WAAW,CAACC,WAAZ,GAA0BF,QAAQ,CAACnD,CAAD,CAAlC;AACA;;AACF,eAAK,YAAL;AACEoD,YAAAA,WAAW,CAACd,SAAZ,GAAwBa,QAAQ,CAACnD,CAAD,CAAhC;AACA;;AACF;AACE;AARJ;AAUD;;AACD,aAAOoD,WAAP;AACD,KAfD;;AAiBA,UAAME,mBAAmB,GAAG,MAAM;AAChC,UAAIH,QAAQ,GAAG,KAAKhE,KAAL,CAAWoE,aAAX,EAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,QAAQ,CAAClD,MAAxC;AACA,UAAIX,cAAc,GAAG4D,cAAc,CAACC,QAAD,CAAnC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BnE,cAAc,CAAC+D,WAA9C;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BnE,cAAc,CAACgD,SAA5C;AAEA,UAAIzC,UAAU,GAAG,EAAjB;AACAA,MAAAA,UAAU,CAACD,OAAX,GAAqBD,kBAAkB,CAACL,cAAc,CAAC+D,WAAhB,CAAvC;AACAxD,MAAAA,UAAU,CAAC0C,KAAX,GAAmBF,aAAa,CAAC/C,cAAc,CAACgD,SAAhB,CAAhC;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B5D,UAAU,CAACD,OAA1C;AACA4D,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B5D,UAAU,CAAC0C,KAAxC;AACA,aAAO1C,UAAP;AACD,KAbD;;AAeA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AACE,MAAA,QAAQ,EAAEhB,SAAS,CAAC6E,SADtB;AAEE,MAAA,MAAM,EAAE7E,SAAS,CAAC8E,OAFpB;AAGE,MAAA,aAAa,EAAE9E,SAAS,CAAC+E,wBAH3B;AAIE,MAAA,YAAY,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAExE,QAAAA,WAAW,EAAE;AAAf,OAAd,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKD,KAAL,CAAWC,WAAX,GAAyBiE,mBAAmB,GAAG1D,OAAtB,CAA8BkE,GAA9B,CAAkC,CAACC,IAAD,EAAOC,GAAP;AAG1D;AACA;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAe,MAAA,SAAS,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,CAAG,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGE;AAAQ,MAAA,OAAO,EAAE,MAAM,CAAG,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAJF,EAUGD,IAAI,CAAClD,gBAAL,KAA0B,MAA1B,GAAmC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAnC,GAAwH,EAV3H,EAYE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoBkD,IAAI,CAACrD,SAAzB,CADF,CAZF,EAeE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOqD,IAAI,CAAC3D,IAAZ,CADF,CAfF,EAkBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAa2D,IAAI,CAAC/C,WAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkB+C,IAAI,CAACvD,YAAvB,CAFF,EAGGuD,IAAI,CAACtD,YAAL,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBsD,IAAI,CAACtD,YAAvB,MAApB,GAAmE,EAHtE,CAlBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAOE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA/BF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlCF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArCF,EAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3CF,CADF,EAgDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGsD,IAAI,CAAC3C,OADR,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG2C,IAAI,CAAC7C,OADR,CAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6C,IAAI,CAAC1C,IADR,CAVF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG0C,IAAI,CAACxC,KADR,CAbF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGwC,IAAI,CAACnC,YADR,CAhBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGmC,IAAI,CAACpC,UADR,CAnBF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGoC,IAAI,CAAChC,OADR,CAtBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgC,IAAI,CAAC5C,QADR,CA5BF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG4C,IAAI,CAACvC,OADR,CA/BF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuC,IAAI,CAACrC,SADR,CAlCF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGqC,IAAI,CAACtC,OADR,CArCF,EAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGsC,IAAI,CAAClC,QADR,CAxCF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkC,IAAI,CAACjC,QADR,CA3CF,CAhDF,CADF,CAvBF,EA6HE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrB,aAAK3C,KAAL,CAAW8E,UAAX,CACE,cADF,EACkB;AAChB,WAFF,EAEO;AACL,SAHF,EAGK;AACH,qBAJF,EAIiB;AACf,YALF,EAKQ;AACLC,QAAAA,KAAD,IAAW;AACTV,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBS,KAArB;AACD,SARH,CAQI;AARJ;AAUA,aAAK/E,KAAL,CAAW8E,UAAX,CACE,cADF,EACkB;AAChB,WAFF,EAEO;AACL,SAHF,EAGK;AACH,eAJF,EAIW;AACT,YALF,EAKQ;AACLC,QAAAA,KAAD,IAAW;AACTV,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBS,KAArB;AACD,SARH,CAQI;AARJ;AAUD,OArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7HF,CAJwB,CAAzB,GAyJG,YA/JN,CADF,CADF;AAqKD;;AArRmC;;AAwRtC,eAAetF,iBAAiB,CAACuF,OAAlB,CAA0BlF,aAA1B,CAAf","sourcesContent":["import ReactGoogleSheets from 'react-google-sheets';\nimport * as Constants from './Constants'\nimport React, { Component } from 'react';\nimport './App.css';\nimport Player from './Player.js'\n\nclass DataComponent extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      sheetLoaded: false,\n      auctionWebData: {},\n      currentPlayerId: '',\n      nextPlayerId: '',\n      prevPlayerId: ''\n\n    }\n  }\n  render() {\n\n    const populatePlayerInfo = (players) => {\n      let returnData = [];\n      let playersData = players.data;\n      for (let i = 0; i < playersData.length; i++) {\n        let playerProfile = {};\n        playerProfile.playerId = playersData[i][0];\n        playerProfile.name = playersData[i][1];\n        playerProfile.emailId = playersData[i][2];\n        playerProfile.mobileNo = playersData[i][3];\n        playerProfile.perTeamPlayerCount = playersData[i][4];\n        playerProfile.mtbcTeamName = playersData[i][5];\n        playerProfile.mtplTeamName = playersData[i][6];\n        playerProfile.basePrice = playersData[i][7];\n        playerProfile.purchasePrice = playersData[i][8];\n        playerProfile.status = playersData[i][9];\n        playerProfile.isExternalPlayer = playersData[i][10];\n        playerProfile.isRetainedPlayer = playersData[i][11];\n        playerProfile.isOwnerPlayer = playersData[i][12];\n        playerProfile.overallRank = playersData[i][13];\n        playerProfile.id = playersData[i][13];\n        playerProfile.batRank = playersData[i][14];\n        playerProfile.bowlRank = playersData[i][15];\n        playerProfile.matches = playersData[i][16];\n        playerProfile.runs = playersData[i][17];\n        playerProfile.ballsFaced = playersData[i][18];\n        playerProfile.batSR = playersData[i][19];\n        playerProfile.wickets = playersData[i][20];\n        playerProfile.economy = playersData[i][21];\n        playerProfile.bowlOvers = playersData[i][22];\n        playerProfile.batAverage = playersData[i][23];\n        playerProfile.highestScore = playersData[i][24];\n        playerProfile.bestBowl = playersData[i][25];\n        playerProfile.hatTrick = playersData[i][26];\n        playerProfile.catches = playersData[i][27];\n        playerProfile.totalPoints = playersData[i][28];\n        playerProfile.batPoints = playersData[i][29];\n        playerProfile.bowlPoints = playersData[i][30];\n        playerProfile.fieldPoints = playersData[i][31];\n\n        returnData.push(playerProfile);\n      }\n      return returnData;\n    }\n\n    const populateTeams = (mtplTeams) => {\n      let returnData = [];\n      let teams = mtplTeams.data;\n      for (let i = 3; i < teams.length; i++) {\n        let teamInfo = {};\n        teamInfo.name = teams[i][0];\n        teamInfo.ownerName = teams[i][1];\n        teamInfo.isOwnerPlayer = teams[i][2];\n        teamInfo.amount = teams[i][3];\n        teamInfo.amountSpent = teams[i][4];\n        teamInfo.amountBalance = teams[i][5];\n        teamInfo.playerCount = teams[i][6];\n        teamInfo.remainingPlayerCount = teams[i][7];\n        teamInfo.maxAllowedBidOnNextPlayer = teams[i][8];\n        teamInfo.ownerPlayerId = teams[i][9];\n        teamInfo.retainedPlayerId = teams[i][10];\n        returnData.push(teamInfo);\n      }\n      return returnData;\n    }\n\n    const getAuctionData = (xcelData) => {\n      let auctionData = {};\n      for (let i = 0; i < xcelData.length; i++) {\n        switch (xcelData[i].name) {\n          case 'MTPL Players':\n            auctionData.mtplPlayers = xcelData[i];\n            break;\n          case 'MTPL Teams':\n            auctionData.mtplTeams = xcelData[i];\n            break;\n          default:\n            break;\n        }\n      }\n      return auctionData;\n    }\n\n    const retrieveAuctionData = () => {\n      let xcelData = this.props.getSheetsData();\n      console.log(\"No of Sheets : \", xcelData.length);\n      let auctionWebData = getAuctionData(xcelData);\n      console.log('MTPL Players : ', auctionWebData.mtplPlayers);\n      console.log('MTPL Teams : ', auctionWebData.mtplTeams);\n\n      let returnData = {};\n      returnData.players = populatePlayerInfo(auctionWebData.mtplPlayers);\n      returnData.teams = populateTeams(auctionWebData.mtplTeams);\n      console.log(\"MTPL Players : \", returnData.players);\n      console.log(\"MTPL Teams : \", returnData.teams);\n      return returnData;\n    }\n\n    return (\n      <div>\n        <ReactGoogleSheets\n          clientId={Constants.CLIENT_ID}\n          apiKey={Constants.API_KEY}\n          spreadsheetId={Constants.MTPL_MENS_SPREADSHEET_ID}\n          afterLoading={() => this.setState({ sheetLoaded: true })}\n        >\n          {this.state.sheetLoaded ? retrieveAuctionData().players.map((item, key) =>\n\n\n            /*  <Player item={item} id={key} key={key} /> */\n            <div key={key} className=\"AuctionBody\">\n\n\n\n              <div>\n                <button onClick={() => { }}>Previous</button>\n\n                <button onClick={() => { }}>Next</button>\n              </div>\n\n              {item.isExternalPlayer === 'TRUE' ? <div className=\"externalPlayer\"> Associated with Other MN Cricket League(s) </div> : ''}\n\n              <div className=\"basePrice\">\n                <span>Base Price : {item.basePrice}</span>\n              </div>\n              <div className=\"playerName\">\n                <span>{item.name}</span>\n              </div>\n              <div className=\"playerInfo\">\n                <span>Rank: {item.overallRank}</span>\n                <span>MTBC Team: {item.mtbcTeamName}</span>\n                {item.mtplTeamName ? <span>MTPL Team: {item.mtplTeamName} </span> : ''}\n              </div>\n              <div>\n                <table className=\"table\">\n                  <tr>\n                    <td className=\"td\">\n                      Matches\n                    </td>\n                    <td className=\"td\">\n                      &nbsp;\n                    </td>\n                    <td className=\"td\">\n                      Rank\n                    </td>\n                    <td>\n                      Runs\n                    </td>\n                    <td>\n                      S/R\n                    </td>\n                    <td>\n                      HS\n                    </td>\n                    <td>\n                      Ave\n                    </td>\n                    <td>\n                      (C)\n                    </td>\n                    <td>\n                      &nbsp;\n                    </td>\n                    <td>\n                      Rank\n                    </td>\n                    <td>\n                      (W)\n                    </td>\n                    <td>\n                      (O)\n                    </td>\n                    <td>\n                      Econ\n                    </td>\n                    <td>\n                      BB\n                    </td>\n                    <td>\n                      H/T\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"td\">\n                      {item.matches}\n                    </td>\n                    <td>\n                      &nbsp;\n                    </td>\n                    <td>\n                      {item.batRank}\n                    </td>\n                    <td>\n                      {item.runs}\n                    </td>\n                    <td>\n                      {item.batSR}\n                    </td>\n                    <td>\n                      {item.highestScore}\n                    </td>\n                    <td>\n                      {item.batAverage}\n                    </td>\n                    <td>\n                      {item.catches}\n                    </td>\n                    <td>\n                      &nbsp;\n                    </td>\n                    <td>\n                      {item.bowlRank}\n                    </td>\n                    <td>\n                      {item.wickets}\n                    </td>\n                    <td>\n                      {item.bowlOvers}\n                    </td>\n                    <td>\n                      {item.economy}\n                    </td>\n                    <td>\n                      {item.bestBowl}\n                    </td>\n                    <td>\n                      {item.hatTrick}\n                    </td>\n                  </tr>\n\n                </table>\n              </div>\n\n\n              {/* Update Data */}\n              <button onClick={() => {\n                this.props.updateCell(\n                  'MTPL Players', // sheetName\n                  'G', // column\n                  4, // row\n                  'Sholay - 11', // value\n                  null, // successCallback\n                  (error) => {\n                    console.log('error', error)\n                  } // errorCallback\n                );\n                this.props.updateCell(\n                  'MTPL Players', // sheetName\n                  'I', // column\n                  4, // row\n                  '50000', // value\n                  null, // successCallback\n                  (error) => {\n                    console.log('error', error)\n                  } // errorCallback\n                );\n              }}>update cell!</button>\n            </div>\n\n          ) : 'loading...'}\n        </ReactGoogleSheets>\n      </div>\n    )\n  }\n}\n\nexport default ReactGoogleSheets.connect(DataComponent);\n"]},"metadata":{},"sourceType":"module"}